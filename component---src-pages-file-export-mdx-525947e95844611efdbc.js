"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[7896],{3624:function(e,t,a){a.d(t,{Z:function(){return w}});var r=a(7294),l=a(8650),n=a.n(l),o=a(1597),i=a(811),s=a(87),c=a(5900),m=a.n(c),d=function(e){var t,a=e.title,l=e.theme,n=e.tabs,o=void 0===n?[]:n;return r.createElement("div",{className:m()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=o.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===l,t))},r.createElement("div",{className:"bx--grid"},r.createElement("div",{className:"bx--row"},r.createElement("div",{className:"bx--col-lg-12"},r.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},u=function(e){var t=e.relativePagePath,a=e.repository,l=(0,o.useStaticQuery)("1364590287").site.siteMetadata.repository,n=a||l,i=n.baseUrl,s=n.subDirectory,c=i+"/edit/"+n.branch+s+"/src/pages"+t;return i?r.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},r.createElement("div",{className:"bx--col"},r.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},p=a(4703),f=a(1721),g=function(e){function t(){return e.apply(this,arguments)||this}return(0,f.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,l=e.slug,i=l.split("/").filter(Boolean).slice(-1)[0],s=a.map((function(e){var t,a=n()(e,{lower:!0,strict:!0}),s=a===i,c=new RegExp(i+"/?(#.*)?$"),d=l.replace(c,a);return r.createElement("li",{key:e,className:m()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},r.createElement(o.Link,{className:"PageTabs-module--link--Kz-7R",to:""+d},e))}));return r.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},r.createElement("div",{className:"bx--grid"},r.createElement("div",{className:"bx--row"},r.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},r.createElement("nav",{"aria-label":t},r.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(r.Component),b=g,h=a(7296),E=a(5387),v=a(3732),y=function(e){var t=e.date,a=new Date(t);return t?r.createElement(v.X2,{className:"last-modified-date-module--row--XJoYQ"},r.createElement(v.sg,null,r.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},w=function(e){var t=e.pageContext,a=e.children,l=e.location,c=e.Title,m=t.frontmatter,f=void 0===m?{}:m,g=t.relativePagePath,v=t.titleType,w=f.tabs,k=f.title,x=f.theme,N=f.description,P=f.keywords,T=f.date,S=(0,E.Z)().interiorTheme,C=(0,o.useStaticQuery)("2456312558").site.pathPrefix,B=C?l.pathname.replace(C,""):l.pathname,Z=w?B.split("/").filter(Boolean).slice(-1)[0]||n()(w[0],{lower:!0}):"",H=x||S;return r.createElement(s.Z,{tabs:w,homepage:!1,theme:H,pageTitle:k,pageDescription:N,pageKeywords:P,titleType:v},r.createElement(d,{title:c?r.createElement(c,null):k,label:"label",tabs:w,theme:H}),w&&r.createElement(b,{title:k,slug:B,tabs:w,currentTab:Z}),r.createElement(h.Z,{padded:!0},a,r.createElement(u,{relativePagePath:g}),r.createElement(y,{date:T})),r.createElement(p.Z,{pageContext:t,location:l,slug:B,tabs:w,currentTab:Z}),r.createElement(i.Z,null))}},1546:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return i},default:function(){return m}});var r=a(3366),l=(a(7294),a(4983)),n=a(3624),o=["components"],i={},s={_frontmatter:i},c=n.Z;function m(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)(c,Object.assign({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"File exporting can be done by using query parameter ",(0,l.kt)("inlineCode",{parentName:"p"},"_format=csv"),". We can download data from any Object Structure, for example, MXAPIASSET in Maximo to a flat file. Similar with File Import, before exporting data, support flat file, no alias conflict and security set up are required for the target Object Structure."),(0,l.kt)("h2",null,"File Export"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"_format=csv")," is always used with other query parameters together for different tasks. Here are some common ones."),(0,l.kt)("p",null,"oslc.select: it can be used to control which columns are included in the csv file. For example, if we are trying to export data from ASSET with assetnum, siteid, description and location field, we can add these four field to oslc.select as ",(0,l.kt)("inlineCode",{parentName:"p"},"oslc.select=assetnum,siteid,description, location"),".\noslc.pageSize: it is used to to control how many records we are going to download from server.\noslc.orderBy: it can be used to define the orderby column in csv file.\noslc.where: it can be used to filtering the data."),(0,l.kt)("p",null,"Most of querying or filtering capability are available for file exporting. Please refer to other chapter due to the requirement."),(0,l.kt)("p",null,"Here is the sample rest call:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?lean=1&oslc.select=assetnum,siteid,description,lo cation&oslc.pageSize=10&oslc.orderBy=-assetnum\n")),(0,l.kt)("p",null,"By this restful call, we are going to download data from MXAPIASSET which including assetnum, siteid, description and location. The maximum records number is 10 and the result will be sorted by assetnum."))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-file-export-mdx-525947e95844611efdbc.js.map