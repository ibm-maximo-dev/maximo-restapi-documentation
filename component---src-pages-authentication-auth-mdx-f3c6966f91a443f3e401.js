"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[1374],{3624:function(e,t,a){a.d(t,{Z:function(){return v}});var n=a(7294),s=a(8650),o=a.n(s),r=a(1597),l=a(811),i=a(87),c=a(5900),u=a.n(c),m=function(e){var t,a=e.title,s=e.theme,o=e.tabs,r=void 0===o?[]:o;return n.createElement("div",{className:u()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=r.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===s,t))},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},d=function(e){var t=e.relativePagePath,a=e.repository,s=(0,r.useStaticQuery)("1364590287").site.siteMetadata.repository,o=a||s,l=o.baseUrl,i=o.subDirectory,c=l+"/edit/"+o.branch+i+"/src/pages"+t;return l?n.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},n.createElement("div",{className:"bx--col"},n.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},h=a(4703),p=a(1721),b=function(e){function t(){return e.apply(this,arguments)||this}return(0,p.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,s=e.slug,l=s.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=o()(e,{lower:!0,strict:!0}),i=a===l,c=new RegExp(l+"/?(#.*)?$"),m=s.replace(c,a);return n.createElement("li",{key:e,className:u()((t={},t["PageTabs-module--selected-item--aBB0K"]=i,t),"PageTabs-module--list-item--024o6")},n.createElement(r.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--xLqxG"},i))))))},t}(n.Component),f=b,g=a(7296),k=a(5387),w=a(3732),E=function(e){var t=e.date,a=new Date(t);return t?n.createElement(w.X2,{className:"last-modified-date-module--row--XJoYQ"},n.createElement(w.sg,null,n.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},v=function(e){var t=e.pageContext,a=e.children,s=e.location,c=e.Title,u=t.frontmatter,p=void 0===u?{}:u,b=t.relativePagePath,w=t.titleType,v=p.tabs,x=p.title,y=p.theme,T=p.description,P=p.keywords,N=p.date,S=(0,k.Z)().interiorTheme,C=(0,r.useStaticQuery)("2456312558").site.pathPrefix,q=C?s.pathname.replace(C,""):s.pathname,M=v?q.split("/").filter(Boolean).slice(-1)[0]||o()(v[0],{lower:!0}):"",j=y||S;return n.createElement(i.Z,{tabs:v,homepage:!1,theme:j,pageTitle:x,pageDescription:T,pageKeywords:P,titleType:w},n.createElement(m,{title:c?n.createElement(c,null):x,label:"label",tabs:v,theme:j}),v&&n.createElement(f,{title:x,slug:q,tabs:v,currentTab:M}),n.createElement(g.Z,{padded:!0},a,n.createElement(d,{relativePagePath:b}),n.createElement(E,{date:N})),n.createElement(h.Z,{pageContext:t,location:s,slug:q,tabs:v,currentTab:M}),n.createElement(l.Z,null))}},9865:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return u}});var n=a(3366),s=(a(7294),a(4983)),o=a(3624),r=["components"],l={},i={_frontmatter:l},c=o.Z;function u(e){var t=e.components,a=(0,n.Z)(e,r);return(0,s.kt)(c,Object.assign({},i,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Below we discuss the most common forms of authentication that we use in Maximo deployments and how to use the REST apis for those authentication schemes."),(0,s.kt)("h2",null,"Maximo native authentication"),(0,s.kt)("p",null,"This is where Maximo owns the user repository along with the user credentials. Maximo is responsible for authenticating the incoming REST call. The REST api expects the HTTP request with a “maxauth” request header that has a base64 encoded userid:password. A sample request would look like below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /oslc/login\nmaxauth: <base64 encoded user:pass>\n<no body required>\n")),(0,s.kt)("h2",null,"LDAP based authentications"),(0,s.kt)("p",null,"This is where Maximo does not own the authentication credentials. Its owned by the application server and hence the authentication is validated by the application server."),(0,s.kt)("h3",null,"BASIC"),(0,s.kt)("p",null,"In this scheme the application server expects the authentication credentials to be presented as below"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /oslc/login\nAuthorization: BASIC <base64 encoded user:pass>\n<no body required>\n")),(0,s.kt)("h3",null,"FORM"),(0,s.kt)("p",null,"In this scheme the request should look like below"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /j_security_check\nContent-type: application/x-www-form-urlencoded\nj_username=<userid>&j_password=<password>\n")),(0,s.kt)("p",null,"Note, this being a form encoded POST, the userid and password values needs to be url encoded values. The response for this request will have the jsessionid cookie along with Ltpa token cookies (for Websphere). These cookies need to be re-used for the subsequent api calls.\nIn fact for all authentication schemes it’s recommended that we re-use the authenticated session for subsequent REST api calls by replaying the session and authentication based cookies from a successful authentication response. This helps with performance as the subsequent api calls just re-use the session and does not need to re-authenticate for every request."),(0,s.kt)("p",null,"Sample JAVA client code for each of these authentication schemes can be referenced from the\nMaximoConnector.java code (method setAuth(..)) in the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/ibmmaximorestjsonapis/maximorestclient/blob/master/src/com/ibm/maximo/oslc/MaximoConnector.java"},"Maximo Connector")," code."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-authentication-auth-mdx-f3c6966f91a443f3e401.js.map