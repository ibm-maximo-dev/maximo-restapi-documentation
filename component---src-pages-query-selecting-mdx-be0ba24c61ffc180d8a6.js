"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[5481],{3624:function(e,t,n){n.d(t,{Z:function(){return x}});var a=n(7294),o=n(8650),s=n.n(o),i=n(1597),l=n(811),r=n(87),p=n(5900),c=n.n(p),m=function(e){var t,n=e.title,o=e.theme,s=e.tabs,i=void 0===s?[]:s;return a.createElement("div",{className:c()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=i.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===o,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},h=function(e){var t=e.relativePagePath,n=e.repository,o=(0,i.useStaticQuery)("1364590287").site.siteMetadata.repository,s=n||o,l=s.baseUrl,r=s.subDirectory,p=l+"/edit/"+s.branch+r+"/src/pages"+t;return l?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:p},"Edit this page on GitHub"))):null},d=n(4703),u=n(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,u.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,o=e.slug,l=o.split("/").filter(Boolean).slice(-1)[0],r=n.map((function(e){var t,n=s()(e,{lower:!0,strict:!0}),r=n===l,p=new RegExp(l+"/?(#.*)?$"),m=o.replace(p,n);return a.createElement("li",{key:e,className:c()((t={},t["PageTabs-module--selected-item--aBB0K"]=r,t),"PageTabs-module--list-item--024o6")},a.createElement(i.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},r))))))},t}(a.Component),g=k,f=n(7296),w=n(5387),b=n(3732),N=function(e){var t=e.date,n=new Date(t);return t?a.createElement(b.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(b.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},x=function(e){var t=e.pageContext,n=e.children,o=e.location,p=e.Title,c=t.frontmatter,u=void 0===c?{}:c,k=t.relativePagePath,b=t.titleType,x=u.tabs,T=u.title,y=u.theme,C=u.description,E=u.keywords,v=u.date,_=(0,w.Z)().interiorTheme,S=(0,i.useStaticQuery)("2456312558").site.pathPrefix,R=S?o.pathname.replace(S,""):o.pathname,I=x?R.split("/").filter(Boolean).slice(-1)[0]||s()(x[0],{lower:!0}):"",A=y||_;return a.createElement(r.Z,{tabs:x,homepage:!1,theme:A,pageTitle:T,pageDescription:C,pageKeywords:E,titleType:b},a.createElement(m,{title:p?a.createElement(p,null):T,label:"label",tabs:x,theme:A}),x&&a.createElement(g,{title:T,slug:R,tabs:x,currentTab:I}),a.createElement(f.Z,{padded:!0},n,a.createElement(h,{relativePagePath:k}),a.createElement(N,{date:v})),a.createElement(d.Z,{pageContext:t,location:o,slug:R,tabs:x,currentTab:I}),a.createElement(l.Z,null))}},9126:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return l},default:function(){return c}});var a=n(3366),o=(n(7294),n(4983)),s=n(3624),i=["components"],l={},r={_frontmatter:l},p=s.Z;function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(p,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",null,"Overview"),(0,o.kt)("p",null,"When designing the the REST API framework, the following functionality was considered:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Being able to filter and sort Maximo business objects by using a higher-level query language that internally maps to the native SQL for the corresponding relation DB that is used by the Maximo deployment."),(0,o.kt)("li",{parentName:"ul"},"Being able to select the list of attributes that you want the API to fetch."),(0,o.kt)("li",{parentName:"ul"},"Being able to fetch data from related objects leveraging existing Maximo relationships without additional configuration."),(0,o.kt)("li",{parentName:"ul"},"Being able to page data.")),(0,o.kt)("p",null,"With these basic requirements in mind, we can now talk about some of the query parameters that are used for facilitating these. Query API is always based on a collection URI for any resources that are API enabled. All collection URIs support a known set of URI query parameters that operates on the collection.\nThe following most common query parameters are listed:"),(0,o.kt)("h4",null,"Selecting - oslc.select"),(0,o.kt)("p",null,"This query parameter specifies the set of attributes to fetch from the object structures as well as the related objects."),(0,o.kt)("h4",null,"Filtering - oslc.where"),(0,o.kt)("p",null,"This query parameter specifies the WHERE clause for filtering the result set of a query."),(0,o.kt)("h4",null,"Sorting - oslc.orderBy"),(0,o.kt)("p",null,"This query parameter specifies how the results of a query are ordered."),(0,o.kt)("h4",null,"Paging - oslc.pageSize"),(0,o.kt)("p",null,"This query parameter specifies the resources for each page of a query."),(0,o.kt)("h1",null,"Querying data - Mbo and relationship"),(0,o.kt)("h2",null,"Selecting - oslc.select"),(0,o.kt)("p",null,"A sample select clause might be help understand it better. Below is a simple select clause from the MXAPIASSET object structure.\n",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.select=assetnum,location,description,status")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?oslc.pageSize=10&lean=1\n")),(0,o.kt)("p",null,"This results in the following JSON response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTE0MDAvQkVERk9SRA--"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_NjAxOTk1L0ZMRUVU"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_NzM0NDQ0L0ZMRUVU"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_NjEwMDMvQkVERk9SRA--"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MjYyMDAvQkVERk9SRA--"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTAwNC9CRURGT1JE"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTAwNS9CRURGT1JE"\n    },\n    {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTAwNi9CRURGT1JE"\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&_lid=wilson&lean=1&oslc.pageSize=10&_lpwd=wilson"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?oslc.pageSize=10&lean=1&_lid=wilson&_lpwd=wilson",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("p",null,"This results in fetching the 10 members (max) of the ",(0,o.kt)("inlineCode",{parentName:"p"},"MXAPIASSET")," resource, which is based on the ",(0,o.kt)("inlineCode",{parentName:"p"},"ASSET")," MBO, and each member pointing to an asset record with a ",(0,o.kt)("inlineCode",{parentName:"p"},"href")," that contains the link to get the details for that ",(0,o.kt)("inlineCode",{parentName:"p"},"MXAPIASSET"),". Any collection resource in this REST API follows the same basic structure."),(0,o.kt)("p",null,"Note that the result is boxed under the ",(0,o.kt)("inlineCode",{parentName:"p"},"member")," JSON array. Other than the ",(0,o.kt)("inlineCode",{parentName:"p"},"member")," property there is another property called ",(0,o.kt)("inlineCode",{parentName:"p"},"responseInfo")," that contains the meta information about the query. The meta information includes the current URI that is used to get the result (",(0,o.kt)("inlineCode",{parentName:"p"},"href"),") and the URL for the next page (",(0,o.kt)("inlineCode",{parentName:"p"},"nextPage"),"), if there is a next page. The meta information also includes the URL for the previous page (",(0,o.kt)("inlineCode",{parentName:"p"},"previousPage"),"), if there is a previous page. The current page number (",(0,o.kt)("inlineCode",{parentName:"p"},"pagenum"),") and total database count (",(0,o.kt)("inlineCode",{parentName:"p"},"totalCount"),") of the rows that meet the query filter criterion as well as the total number of pages (",(0,o.kt)("inlineCode",{parentName:"p"},"totalPages"),") that are available for this query are also included."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"totalCount")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"totalPages")," are not displayed by default. You can enable ",(0,o.kt)("inlineCode",{parentName:"p"},"totalCount")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"totalPages")," by including the query parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"collectioncount=1")," to the request. If you want to see only the total count of records that match the query and not the records, you use the request query parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"count=1"),". This results in the following JSON response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "totalCount": 10\n}\n')),(0,o.kt)("p",null,"If you set the ",(0,o.kt)("inlineCode",{parentName:"p"},"mxe.oslc.collectioncount")," system property to ",(0,o.kt)("inlineCode",{parentName:"p"},"1"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"totalCount")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"totalPages")," parameters are included by default as part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"responseInfo"),". However, we recommend not to set that property to ",(0,o.kt)("inlineCode",{parentName:"p"},"1")," because there will be cases where you may not need those values and will unnecessarily incur the cost of getting those values (which needs an additional SQL call to get total count). It is preferred to just request them using the query parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"collectioncount")," as needed."),(0,o.kt)("p",null,"Just getting the links to the member resources may not be very exciting or useful. Rather than traversing individual URIs for details, the  ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.select")," clause is used to get more details inlined in this JSON response."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET  /oslc/os/mxapiasset?oslc.pageSize=2&oslc.select=assetnum,location,description,status&lean=1\n")),(0,o.kt)("p",null,"This results in the following JSON response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "assetmeter_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/int_assetmeter",\n      "status_description": "Not Ready",\n      "ahrrplan_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/ahrrplan",\n      "description": "Highway Tractor, Class 8 Truck, Cummins M11 , Spic",\n      "moddowntimehist_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/moddowntimehist",\n      "downtimereport_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/downtimereport",\n      "_rowstamp": "36654",\n      "ahflag_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/ahflag",\n      "assetnum": "A6002",\n      "location": "DALTERM",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-",\n      "assetspec_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/assetspecclass",\n      "serviceaddress_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/serviceaddress",\n      "status": "NOT READY"\n    },\n    {\n      "assetmeter_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/int_assetmeter",\n      "status_description": "Not Ready",\n      "ahrrplan_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/ahrrplan",\n      "description": "STAMPING MACH ",\n      "moddowntimehist_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/moddowntimehist",\n      "downtimereport_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/downtimereport",\n      "_rowstamp": "36655",\n      "ahflag_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/ahflag",\n      "assetnum": "L12510",\n      "location": "SHIPPING",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--",\n      "assetspec_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/assetspecclass",\n      "serviceaddress_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/serviceaddress",\n      "status": "NOT READY"\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Clocation%2Cdescription%2Cstatus&lean=1&oslc.pageSize=2"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?oslc.pageSize=10&lean=1&oslc.select=assetnum,location,description,status",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("p",null,"This results in a JSON that contains the four attributes as requested for each of the members. Note that by default the API response skips the null value attributes. For example, if the location is null for any of the member assets in the selection, that attribute will not appear in the member JSON and helps reduce the response payload size. To force the response to add null value attributes, use the query parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"_dropnulls=0"),"."),(0,o.kt)("p",null,"Note that along with the ",(0,o.kt)("inlineCode",{parentName:"p"},"status")," you will also have the ",(0,o.kt)("inlineCode",{parentName:"p"},"status_description")," property, which contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"synonymdomain")," description for that corresponding status value that is based on the users profile language. The API framework detects a domain bound attribute (from the Maximo metadata repository) and uses the domain cache to fetch the description for that status."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"_rowstamp")," property is present for every object in the object structure for a given resource record and is used for handling dirty updates."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"xxxx_collectionref")," properties includes the links to child objects as defined in the ",(0,o.kt)("inlineCode",{parentName:"p"},"MXAPIASSET")," object structure. The prefix ",(0,o.kt)("inlineCode",{parentName:"p"},"xxxx")," is the name of the child object. The ",(0,o.kt)("inlineCode",{parentName:"p"},"GET <collectionref link>")," shows the collection of the child objects. We can traverse through that collection resource just like any other collection ie we can page through them (using ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.pageSize"),") or filter them (using ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.where"),") or get partial views (using  ",(0,o.kt)("inlineCode",{parentName:"p"}," oslc.select"),") etc."),(0,o.kt)("p",null,"To get data from the ",(0,o.kt)("inlineCode",{parentName:"p"},"assetmeter")," object where  ",(0,o.kt)("inlineCode",{parentName:"p"},"assetmeter")," is a child object as defined in the object structure ",(0,o.kt)("inlineCode",{parentName:"p"},"MXAPIASSET"),", you can use the following select clause:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET  /oslc/os/mxapiasset?oslc.pageSize=2&oslc.select=assetnum,status,description,location,assetmeter{*}&lean=1\n")),(0,o.kt)("p",null,"The member JSON looks like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "assetmeter_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/int_assetmeter",\n      "status_description": "Not Ready",\n      "description": "Highway Tractor, Class 8 Truck, Cummins M11 , Spic",\n      "assetmeter": [\n        {\n          "rolldownsource_description": "Accept Asset rolldown.",\n          "localref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/int_assetmeter\\/0-7",\n          "linearassetmeterid": 0,\n          "sinceinstall": 0.0,\n          "newreading": "",\n          "sincelastinspect": 0.0,\n          "_rowstamp": "39508",\n          "isdelta": false,\n          "rollover": 100000.0,\n          "href": "http:\\/\\/childkey#QVNTRVQvQVNTRVRNRVRFUi9BNjAwMi8wL09ET00tTS9GTEVFVA--",\n          "readingtype_description": "Cumulative usage",\n          "avgcalcmethod": "SLIDING-DAYS",\n          "measurement_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/int_assetmeter\\/0-7\\/measurement",\n          "changeby": "WILSON",\n          "active": true,\n          "changedate": "2005-01-30T12:34:01-05:00",\n          "avgcalcmethod_description": "Readings from last n days",\n          "orgid": "EAGLENA",\n          "sincelastrepair": 0.0,\n          "assetmeterid": 7,\n          "meterreading_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-\\/int_assetmeter\\/0-7\\/meterreading",\n          "lifetodate": 0.0,\n          "measureunitid": "MILES",\n          "metername": "ODOM-M",\n          "sincelastoverhaul": 0.0,\n          "dorollover": false,\n          "readingtype": "ACTUAL",\n          "rolldownsource": "ASSET",\n          "slidingwindowsize": 10\n        }\n      ],\n      "_rowstamp": "36654",\n      "assetnum": "A6002",\n      "location": "DALTERM",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-",\n      "status": "NOT READY"\n    },\n    {\n      "assetmeter_collectionref": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--\\/int_assetmeter",\n      "status_description": "Not Ready",\n      "description": "STAMPING MACH ",\n      "_rowstamp": "36655",\n      "assetnum": "L12510",\n      "location": "SHIPPING",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--",\n      "status": "NOT READY"\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Clocation%2Cdescription%2Cstatus%2Cassetmeter%7B*%7D&lean=1&oslc.pageSize=2"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?oslc.pageSize=10&lean=1&oslc.select=assetnum,location,description,status,assetmeter{*}",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("p",null,"To get the child object details, the notation - ",(0,o.kt)("inlineCode",{parentName:"p"},"<child object name>{comma separated attribute names}")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," to get all properties is used. So ",(0,o.kt)("inlineCode",{parentName:"p"},"assetmeter{*}")," is going to fetch all properties for the ",(0,o.kt)("inlineCode",{parentName:"p"},"assetmeter"),". This notation is applicable for multiple levels. For example, you can define ",(0,o.kt)("inlineCode",{parentName:"p"},"obj1{prop1,prop2,obj2{prop21,prop22}}")," - where ",(0,o.kt)("inlineCode",{parentName:"p"},"obj2")," is defined as a child object of ",(0,o.kt)("inlineCode",{parentName:"p"},"obj1"),"."),(0,o.kt)("p",null,"While this notation works for child objects, you often need to get more data from related objects, such as locations or work orders, which are not defined in the object structure. The following notation is an example of calling more data from related objects:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?oslc.pageSize=2&oslc.select=assetnum,status,description,location,location.description,location.status&lean=1\n")),(0,o.kt)("p",null,"This results in a member json like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "status_description": "Not Ready",\n      "description": "Highway Tractor, Class 8 Truck, Cummins M11 , Spic",\n      "_rowstamp": "36654",\n      "assetnum": "A6002",\n      "$alias_this_attr$location": "DALTERM",\n      "location": {\n        "status_description": "Operating",\n        "description": "Dallas Domocile Terminal",\n        "status": "OPERATING"\n      },\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-",\n      "status": "NOT READY"\n    },\n    {\n      "status_description": "Not Ready",\n      "description": "STAMPING MACH ",\n      "assetnum": "L12510",\n      "$alias_this_attr$location": "SHIPPING",\n      "location": {\n        "status_description": "Operating",\n        "description": "Shipping Location",\n        "status": "OPERATING"\n      },\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--",\n      "status": "NOT READY"\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Cstatus%2Cdescription%2Clocation%2Clocation.description%2Clocation.status&_lid=wilson&oslc.pageSize=2&_lpwd=wilson"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?_lid=wilson&_lpwd=wilson&oslc.pageSize=2&oslc.select=assetnum,status,description,location,location.description,location.status",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("h3",null,"Aliasing of attributes"),(0,o.kt)("p",null,"You might have noticed the property “$alias_this_attr$location”. What is that?"),(0,o.kt)("p",null,"The name clash of the attribute named ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," with the relation named ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," - both at the asset object level. In XML, this clash is resolved by using namespaces. With JSON, you can rename the property with an alias. Aliasing refers to the process of renaming a MBO attribute in the JSON domain to avoid naming conflicts. Where there is a naming conflict, the JSON response marks the renamed attribute with the prefix ",(0,o.kt)("inlineCode",{parentName:"p"},"$alias_this_attr$"),".  To alias an attribute, you use the  ",(0,o.kt)("inlineCode",{parentName:"p"},"--")," operator in the select clause. The following renames the ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," attribute to ",(0,o.kt)("inlineCode",{parentName:"p"},"mylocation")," in the JSON domain:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oslc.select=assetnum,location--mylocation,location.status\n")),(0,o.kt)("p",null,"Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"--")," operator works only on attributes and not on object names or relation names. Therefore, if an attribute name clashes with an object name or a relation name, the attribute name needs to be aliased."),(0,o.kt)("p",null,"The response json looks like following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "assetnum": "A6002",\n      "location": {\n        "status_description": "Operating",\n        "status": "OPERATING"\n      },\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_QTYwMDIvRkxFRVQ-",\n      "mylocation": "DALTERM",\n    },\n    {\n      "_rowstamp": "36655",\n      "assetnum": "L12510",\n      "location": {\n        "status_description": "Operating",\n        "status": "OPERATING"\n      },\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--",\n      "mylocation": "SHIPPING",\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Clocation--mylocation%2Clocation.status&_lid=wilson&lean=1&oslc.pageSize=2&_lpwd=wilson"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?_lid=wilson&_lpwd=wilson&oslc.pageSize=2&oslc.select=assetnum,location--mylocation,location.status&lean=1",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("h2",null,"Dynamic Select Clause"),(0,o.kt)("h3",null,"1:1 relationship"),(0,o.kt)("p",null,"Asset to location is a 1:1 relationship where the dot notation attaches the JSON object for the location with the member JSON for ",(0,o.kt)("inlineCode",{parentName:"p"},"MXAPIASSET")," at the asset header object. Note that the API framework detects a conflict of names - attribute ",(0,o.kt)("inlineCode",{parentName:"p"},"location")," and the relation named ",(0,o.kt)("inlineCode",{parentName:"p"},"location"),". Note that the dot notation format is  ",(0,o.kt)("inlineCode",{parentName:"p"},"<relation name>[.<relation name>]*.<attribute name>"),". Effectively, these relations can be nested too. The API response groups attributes at each relation level to form the JSON object. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oslc.select=rel1.a1,rel1.a2,rel1.rel11.a11,rel1.rel11.a12,rel1.rel21.a21\n")),(0,o.kt)("p",null,"Will result in a json like"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "rel1": {\n    "a1": "...",\n    "a2": "...",\n    "rel11": {\n      "a11": "...",\n      "a12": "..."\n    },\n    "rel21": {\n      "a21": "..."\n    }\n  }\n}\n')),(0,o.kt)("h3",null,"1:many relationship"),(0,o.kt)("p",null,"Dot notations produce JSON objects. However, for related data that is ",(0,o.kt)("inlineCode",{parentName:"p"},"1:*"),", a variation is required. For example,  for an ",(0,o.kt)("inlineCode",{parentName:"p"},"Asset:Workorder")," relationship, an asset can have many open work orders. If you want to get details about all open work orders for the set of Assets, you can use the following select clause:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'GET oslc/os/mxapiasset?_lid=wilson&_lpwd=wilson&oslc.pageSize=2&oslc.select=assetnum,rel.openwo{wonum,description}&oslc.where=openwo.wonum="*"\n')),(0,o.kt)("p",null,"This ",(0,o.kt)("inlineCode",{parentName:"p"},"rel")," notation has the format - ",(0,o.kt)("inlineCode",{parentName:"p"},"rel.<relation name>")," and results in a JSON array property named ",(0,o.kt)("inlineCode",{parentName:"p"},"relation name"),". The following example shows the sample output format:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "member": [\n    {\n      "openwo": [\n        {\n          "description": "11400 PM work",\n          "wonum": "43013"\n        },\n        {\n          "description": "Inspection",\n          "wonum": "41081"\n        },\n        {\n          "description": "Inspection and Certification",\n          "wonum": "41041"\n        },\n        {\n          "description": "11400 PM WORK",\n          "wonum": "43014"\n        },\n        {\n          "description": "11400 PM work",\n          "wonum": "43012"\n        },\n        {\n          "description": "Inspection and Certification",\n          "wonum": "42002"\n        },\n        {\n          "description": "Inspection",\n          "wonum": "40122"\n        },\n        {\n          "description": "11400 PM WORK",\n          "wonum": "43011"\n        },\n        {\n          "description": "11400 PM work",\n          "wonum": "43015"\n        }\n      ],\n\n      "assetnum": "11400",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTE0MDAvQkVERk9SRA--",\n    },\n    {\n      "openwo": [\n        {\n          "description": "Record amperage and voltage with motor operating.",\n          "wonum": "1006-70"\n        },\n        {\n          "description": "Check for leaks.",\n          "wonum": "1006-30"\n        },\n        {\n          "description": "Check pump float switch.",\n          "wonum": "1006-20"\n        },\n        {\n          "description": "Check pump operation.",\n          "wonum": "1006-10"\n        },\n        {\n          "description": "Record amperage and voltage with motor operating.",\n          "wonum": "1002-70"\n        },\n        {\n          "description": "Inspect main disconnect and all electrical.",\n          "wonum": "1002-40"\n        },\n        {\n          "description": "Inspect floats.",\n          "wonum": "1002-60"\n        },\n        {\n          "description": "Clean contactors and contactor compartment.",\n          "wonum": "1002-50"\n        },\n        {\n          "description": "Feedwater Pump Service",\n          "wonum": "1006"\n        },\n        {\n          "description": "Inspect floats and replace main gasket on housing.",\n          "wonum": "1006-60"\n        },\n        {\n          "description": "Clean contactors and contactor compartment.",\n          "wonum": "1006-50"\n        },\n        {\n          "description": "Check for leaks.",\n          "wonum": "1002-30"\n        },\n        {\n          "description": "Inspect main disconnect and all electrical.",\n          "wonum": "1006-40"\n        },\n        {\n          "description": "Rebuild Feedwater Pump",\n          "wonum": "1002"\n        },\n        {\n          "description": "Replace impeller, shaft, seal and housing.",\n          "wonum": "1002-20"\n        },\n        {\n          "description": "Check pump operation.",\n          "wonum": "1002-10"\n        },\n        {\n          "description": "11450 BREAKDOWN",\n          "wonum": "91091"\n        }\n      ],\n      "_rowstamp": "36666",\n      "_imagelibref": "http:\\/\\/localhost\\/maximo\\/oslc\\/images\\/109",\n      "assetnum": "11450",\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTE0NTAvQkVERk9SRA--",\n    }\n  ],\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Crel.openwo%7Bwonum%2Cdescription%7D&_lid=wilson&oslc.where=openwo.wonum%3D%22*%22&oslc.pageSize=2&_lpwd=wilson"\n    },\n    "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset?_lid=wilson&_lpwd=wilson&oslc.pageSize=2&oslc.select=assetnum,rel.openwo{wonum,description}&oslc.where=openwo.wonum=%22*%22",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("p",null,"This rel notation can also be nested. The nesting occurs as part of it’s attribute set, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oslc.select=rel.rel1{attr1,attr2,rel.rel2{attr21,attr22},rel.rel3{*}, rel4.attr4}\n")),(0,o.kt)("p",null,"Here the ",(0,o.kt)("inlineCode",{parentName:"p"},"rel2"),",  ",(0,o.kt)("inlineCode",{parentName:"p"},"rel3")," are samples of nesting the ",(0,o.kt)("inlineCode",{parentName:"p"},"rel")," notation. The ",(0,o.kt)("inlineCode",{parentName:"p"},"rel4.attr4")," shows that you can embed a dot notation within a rel notation but not the other way round. The ",(0,o.kt)("inlineCode",{parentName:"p"},"rel3")," also demonstrates that you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," to get all attributes for that target object. To determine whether ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," implies all persistent attributes or all persistent and non-persistent attributes combined, use the following guidelines:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the target object is a persistent object, the ",(0,o.kt)("inlineCode",{parentName:"li"},"*")," notation includes all persistent attributes for that object. You need to explicitly request the non-persistent attributes to include them. For example, - ",(0,o.kt)("inlineCode",{parentName:"li"},"rel.openwo{*,displaywonum}")," where ",(0,o.kt)("inlineCode",{parentName:"li"},"displaywonum")," is a non-persistent attribute in the target object."),(0,o.kt)("li",{parentName:"ul"},"If the target object is a non-persistent object, the ",(0,o.kt)("inlineCode",{parentName:"li"},"*")," notation will include all non-persistent attributes for that object.")),(0,o.kt)("p",null,"Note that these dot notation attributes and the rel attributes can be used at any level of the object structure. For example, we count use it in assetmeters like below"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"oslc.select=assetnum,status,assetmeter{*,rel.rel1{attr1,attr2},rel2.attr3}\n")),(0,o.kt)("h2",null,"Traversing to related MboSets"),(0,o.kt)("p",null,"Traversing to related MboSets is achieved by using the relation name as part of the ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," URI call. The following example shows how to move from an asset to a work order using the relationship name."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset/{rest id}/openwo?oslc.select=*\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"openwo")," relationship name is used to traverse to the work order collection from a given asset. The resulting JSON is a serialized response that is based on the work order MBO, which by default does not contain any non-persistent attributes. You request non-persistent attributes explicitly in the ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.select ")," clause."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset/{rest id}/openwo?oslc.select=*,npattr1,npattr2\n")),(0,o.kt)("p",null,"If you prefer getting the response as a object structure collection resource, you can use the following clause:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset/{rest id}/openwo.mxapiwodetail?oslc.select=*\n")),(0,o.kt)("p",null,"The object structure name is added at the end of the relation name with a dot separator. With this request, you get all work order records returned as mxwodetail records. The following example is a variation of the API:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset/{rest id}/openwo?oslc.select=*&responseos=mxapiwodetail\n")),(0,o.kt)("p",null,"In both cases, (that is MBO and object structure), you can use all the collection API query parameters like ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.select")," and  ",(0,o.kt)("inlineCode",{parentName:"p"},"oslc.where")," and use paging etc to filter, sort, and view the collection as required. Note that this is recursive and you can go as deep nested as needed by using the relation name and the rest ID pair. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset/{rest id}/openwo/{rest id}/jobplan/?oslc.select=*\n")),(0,o.kt)("p",null,"These rest IDs are derived from the URIs that come back from the server. The client code does not need to generate these IDs but uses the URIs and append the relation name token to it to traverse down from the selected record. We have seen in previous sections how related MboSets can be inlined (inside the parent Mbo/set data) using the ",(0,o.kt)("inlineCode",{parentName:"p"},"rel")," notation. This is different in the sense that we are not inlining the related MboSet, rather we are treating it just like another independent collection resource."),(0,o.kt)("h1",null,"Querying data - Related data"),(0,o.kt)("p",null,"So far we have been discussing how to fetch the MBO and related MBO attributes for the object structure. We are now going to cover the other forms to related data and how to request them explicitly or implicitly."),(0,o.kt)("h2",null,"Images"),(0,o.kt)("p",null,"In Maximo Asset Management, an image repository (imglib table) stores the image avatars for the managed resources, such as assets, items, person. The API framework maintains a cache of the image references. If the system detects an image reference while fetching the resource details, the URI for the image document is added to the resulting JSON (",(0,o.kt)("inlineCode",{parentName:"p"},"_imagelibref"),"). The Maximo image repository stores the images in the Maximo database or in an external repository provided that the repository exposes a simple URI based mechanism to load the images. To facilitate that, the ",(0,o.kt)("inlineCode",{parentName:"p"},"IMGLIB")," table has two attributes - ",(0,o.kt)("inlineCode",{parentName:"p"},"imguri")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"endpointname"),". The ",(0,o.kt)("inlineCode",{parentName:"p"},"endpointname")," attribute points to the integration endpoint, which is the  ",(0,o.kt)("inlineCode",{parentName:"p"},"http(s)")," endpoint, and the ",(0,o.kt)("inlineCode",{parentName:"p"},"imguri")," attribute refers to the URL of the image that is used by the http endpoint to fetch the image. It is possible to use a custom endpoint to handle more complex URLs. Bulk loading of images can be done by using SQL command line tools. Associating images to any Maximo MBOs can be done by using REST APIs. The following sample REST API associates an asset with an image."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /oslc/os/mxapiasset/{id}?action=system:addimage \ncustom-encoding: base64\nx-method-override:PATCH\nSlug: <maps to image name in imglib> Content-type: <maps to mime type in imglib>\n\n<HTTP body contains the base64 encoded image bytes>\n")),(0,o.kt)("p",null,"Or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'POST /oslc/os/mxapiasset/{id}?action=system:addimage \nx-method-override:PATCH\nSlug: <maps to image name in imglib> \nContent-type: <maps to mime type in imglib>\n\nBody:\n{\n"imguri":<uri for the externally sourced image>, \n"endpointname":"..."\n}\n\n')),(0,o.kt)("p",null,"The following API deletes the associated image:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"POST /oslc/os/mxapiasset/{id}?action=system:deleteimage \nx-method-override:PATCH\n")),(0,o.kt)("h2",null,"Domain internal values"),(0,o.kt)("p",null,"Maximo REST API supports fetching the synonymdomain internal value corresponding to the external value which will be in the payload by default as part of the mbo attribute value. Most use cases need the internal values for some client side logic as the external values are customer specific and the internal values are base provided. To get the internal values use the query parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"internalvalues")," with the value set to 1. The internal value would be set using the ",(0,o.kt)("inlineCode",{parentName:"p"},"<attribute name>_maxvalue")," property. An example is shown below"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?oslc.select=assetnum,status&internalvalues=1\n")),(0,o.kt)("p",null,"This results in following JSON response:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "members": [\n    {\n      "status": "...",\n      "status_maxvalue": "..."\n    }\n  ]\n}\n')),(0,o.kt)("h2",null,"Database Aggregation functions"),(0,o.kt)("p",null,"Maximo REST API supports using database aggregation (",(0,o.kt)("inlineCode",{parentName:"p"},"max"),",",(0,o.kt)("inlineCode",{parentName:"p"},"min"),",",(0,o.kt)("inlineCode",{parentName:"p"},"avg"),",",(0,o.kt)("inlineCode",{parentName:"p"},"sum"),",",(0,o.kt)("inlineCode",{parentName:"p"},"count"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"exists"),") functions on related MboSets. For example, to apply these functions on the open work orders for an asset, all the aggregation functions are used in the following API:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'GET /oslc/os/mxapiasset/{rest id}?oslc.select=assetnum,openwo.actlabhrs._dbavg,openwo.actlabhrs._dbsum,openwo.actlabhrs._dbmax,openwo.actlabhrs._dbmin,openwo._dbcount&oslc.where=openwo.wonum="*"\n')),(0,o.kt)("p",null,"The format for the ",(0,o.kt)("inlineCode",{parentName:"p"},"sum"),",",(0,o.kt)("inlineCode",{parentName:"p"},"avg"),",",(0,o.kt)("inlineCode",{parentName:"p"},"max"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"min")," functions is ",(0,o.kt)("inlineCode",{parentName:"p"},"<relation name>.<target attrname>._<operation>"),". Note that the supported operations are  ",(0,o.kt)("inlineCode",{parentName:"p"},"dbsum")," (for\n",(0,o.kt)("inlineCode",{parentName:"p"},"sum"),"),  ",(0,o.kt)("inlineCode",{parentName:"p"},"dbavg")," (for ",(0,o.kt)("inlineCode",{parentName:"p"},"avg"),"),  ",(0,o.kt)("inlineCode",{parentName:"p"},"dbmax")," (for  ",(0,o.kt)("inlineCode",{parentName:"p"},"max"),") and  ",(0,o.kt)("inlineCode",{parentName:"p"},"dbmin")," (for  ",(0,o.kt)("inlineCode",{parentName:"p"},"min"),"). The format is always a dot (.) separated by a three token format that includes a relationship name token that is followed by an attribute name and the underscore prefixed (_) operation to perform on that related attribute."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"count")," function (operation ",(0,o.kt)("inlineCode",{parentName:"p"},"dbcount"),") has a two token format that includes the relation name as the first token followed by the operation name (",(0,o.kt)("inlineCode",{parentName:"p"},"_dbcount"),") and evaluates the count on that related MboSet. The JSON response looks like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "openwo": {\n    "_dbcount": 17,\n    "actlabhrs": {\n      "_dbsum": 2.5,\n      "_dbmax": 2.5,\n      "_dbavg": 0.14705882352941177,\n      "_dbmin": 0.0\n    }\n  },\n  "_rowstamp": "36666",\n  "_imagelibref": "http:\\/\\/localhost\\/maximo\\/oslc\\/images\\/109",\n  "assetnum": "11450",\n  "href": "http:\\/\\/localhost\\/maximo\\/oslc\\/os\\/mxapiasset\\/_MTE0NTAvQkVERk9SRA--",\n}\n')),(0,o.kt)("h2",null,"Bookmarks"),(0,o.kt)("p",null,"Maximo bookmarks can be leveraged with the rest APIs."),(0,o.kt)("h2",null,"Formula properties"),(0,o.kt)("p",null,"You can select calculated values without creating non-persistent attributes by using the integration between the REST APIs and the object formula feature."),(0,o.kt)("p",null,"For example, you create a object formula called ",(0,o.kt)("inlineCode",{parentName:"p"},"MYREPLACECOST")," for asset object by using the ",(0,o.kt)("strong",{parentName:"p"},"Object Formula")," action in the ",(0,o.kt)("strong",{parentName:"p"},"Database Configuration")," application. The formula is ",(0,o.kt)("inlineCode",{parentName:"p"},"purchaseprice/NVL(priority,1)"),". You can then select that formula property that is associated with the asset object by using the following API select clause:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?oslc.select=assetnum,status,exp.myreplacecost\n")),(0,o.kt)("p",null,"The response is as if ",(0,o.kt)("inlineCode",{parentName:"p"},"myreplacecost")," was an attribute of the asset MBO."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "member": [\n    {\n      "assetnum": "A6002",\n      "myreplacecost": 39000.0\n    },\n    {\n      "assetnum": "L12510",\n      "myreplacecost": 1450.0\n    }\n  ],\n  "href": "oslc\\/os\\/mxapiasset",\n  "responseInfo": {\n    "nextPage": {\n      "href": "oslc\\/os\\/mxapiasset?pageno=2&oslc.select=assetnum%2Cexp.myreplacecost&_lid=wilson&oslc.pageSize=2&_lpwd=wilson"\n    },\n    "href": "oslc\\/os\\/mxapiasset?_lid=wilson&_lpwd=wilson&oslc.pageSize=2&oslc.select=assetnum,exp.myreplacecost",\n    "pagenum": 1\n  }\n}\n')),(0,o.kt)("p",null,"A similar approach applies to an individual resource:"),(0,o.kt)("p",null,"GET /oslc/os/mxpaiasset/{rest id}?oslc.select=assetnum,status,exp.myreplacecost"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "assetnum": "L12510",\n  "href": "oslc\\/os\\/mxapiasset\\/_TDEyNTEwL0xBUkVETw--",\n  "myreplacecost": 1450.0\n}\n')),(0,o.kt)("p",null,"Note that this can be considered as a great alternative to defining non-persistent attributes just for the sake of holding calculated values. This acts like a dynamic attribute that does not need db config or admin mode."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-query-selecting-mdx-be0ba24c61ffc180d8a6.js.map