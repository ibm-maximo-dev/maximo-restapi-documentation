{"version":3,"file":"component---src-pages-groupby-groupby-mdx-a178993dce83433a72a7.js","mappings":"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","sources":["webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://mas-playbook/./src/pages/groupby/groupby.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This API provides the aggregation capability which allows us to get aggregation results, for example, max, min, count with flexible filtering and grouping on Maximo data. The results also provide collection links which only return the records in that group.`}</p>\n    <p>{`We mainly have the following query parameters for aggregation,\n|Query|Parameters|Description|Example|\n|—|—|—|—|\n|gbcols|Define the attributes and aggregation function|gbcols=siteid, min.budgetcost, max.budgetcost,avg.totalcost|\n|gbfilters|Provide the ability to filter the aggregation result to a smaller set|gbfilters=siteid=“BEDFORD”|\n|gbsortby|Provide the ability to sort the aggregation result|gbsortby=-siteid|\n|gbrelprop|Provide the ability to get the related property back||\n|gbrange|Provide the ability to get the ranged aggregation result (only support count)|gbrange=assethealth|`}</p>\n    <h2>{`Aggregation Column`}</h2>\n    <p>{`The aggregation API is calculating results based on the selected groupby attribute and aggregation function we define in gbcols. For example, we are trying to get the minimum, maximum budget cost, the average total cost and the count number of the assets for all of the site.\nWe must provide at least one attribute as the grouping on attribute. In our case, we use siteid. Here is the table of syntax, along with the example,`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Aggregation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max.attributename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The maximum value of the attribute`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`max.budgetcost`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min.attributename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The minimum value of the attribute`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`min.budgetcost`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`avg.attributename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The average value of the attribute`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`avg.totalcost`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`count.attributename`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The count number of record`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`count.*`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`gbcols=siteid,max.budgetcost,min.budgetcost,avg.totalcost,count.*\n`}</code></pre>\n    <p>{`The aggregation results will be shown in the format of `}<inlineCode parentName=\"p\">{`<aggregation>_<attributename>`}</inlineCode>{`. For example, if we have `}<inlineCode parentName=\"p\">{`max.attributename`}</inlineCode>{`in the request, the result will be shown as `}<inlineCode parentName=\"p\">{`max_attributename`}</inlineCode>{`. The JSON will also include the collection uri with pre-generated filter matched with the current groupby criteria.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset?gbcols=siteid,count.*,min.budgetcost,max.budgetcost,avg.totalcost\n`}</code></pre>\n    <p>{`Expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"count\": 75,\n  \"max_budgetcost\": 2765.00,\n  \"collectionref\": \".../oslc/os/mxapiasset?&oslc.where=siteid%3D%22BOSTON%22\",\n  \"avg_totalcost\": 30901.17333333333333333333333,\n  \"siteid\": \"BOSTON\",\n  \"min_budgetcost\": 390.00\n}\n`}</code></pre>\n    <p>{`We can use gbcols to get the results from multi-level aggregation. Here is the example of how to aggreate on organization and site:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset?gbcols=orgid,siteid,count.*,min.budgetcost,max.budgetcost,a vg.totalcost\n`}</code></pre>\n    <p>{`Expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"count\": 551,\n  \"orgid\": \"EAGLENA\",\n  \"max_budgetcost\": 25000.00,\n  \"collectionref\": collectionref,\n  \"avg_totalcost\": 436.87392014519056261343012,\n  \"siteid\": \"BEDFORD\",\n  \"min_budgetcost\": 0.00\n}\n`}</code></pre>\n    <h2>{`Aggregation Filter`}</h2>\n    <p>{`Aggregation filter (gbfilter) is used to further filter the results. For example, we would to get the result for smaller set of records instead of full table. That’s the time we can leverage `}<inlineCode parentName=\"p\">{`gbfilter`}</inlineCode>{`, which is equivalent to `}<inlineCode parentName=\"p\">{`having`}</inlineCode>{` clause in SQL term. The value for this query parameter must follow the SQL clause format. `}</p>\n    <p>{`Here is the example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset?gbcols=siteid,count.*&gbfilter=siteid='BEDFORD'\n`}</code></pre>\n    <p>{`Expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"count\": 551,\n  \"sum_totalcost\": 240717.53,\n  \"collectionref\": \".../oslc/os/mxapiasset?&oslc.where=siteid%3D%22BEDFORD%22\",\n  \"siteid\": \"BEDFORD\"\n}\n`}</code></pre>\n    <h2>{`Aggregation Sort By`}</h2>\n    <p>{`To sort the aggregated result by certain attribute, we can leverage gbsortby with the available aggregated columns. It support both ascending and descending order.`}</p>\n    <p>{`Example of descending order`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset?gbcols=siteid,count.*&gbsortby=-siteid\n`}</code></pre>\n    <p>{`For ascending order, the item should be gbsortby=+siteid. However, when we test the url in browser, it is necessary to encode the value for gbsortby. There is online site helping you to do it. Copy the value +siteid from URL and encode it. Bring it and copy to url. Finally, we will get gbsortby= %2Bsiteid for showing result by Site in ascending order.`}</p>\n    <p>{`Example of ascending order`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset?gbcols=siteid,count.*&gbsortby=%2Bsiteid\n`}</code></pre>\n    <h2>{`Aggregation Range`}</h2>\n    <p>{`Sometimes we need to further group the aggregation results together according to certain range. In Maximo, you can use gbrange to get this task done. The format is slightly different due to the data type.`}</p>\n    <h3>{`String(ALN) value`}</h3>\n    <p>{`For example, we are trying to get the total count for work orders which is in WAPPR or APPR status. The gbrange syntax will be like `}<inlineCode parentName=\"p\">{`gbrange=status={[APPR:WAPPR]}`}</inlineCode></p>\n    <p>{`In result set, the result for APPR or WAPPR will be added to a new group with a different total count and collection link. All the other result, like `}<inlineCode parentName=\"p\">{`status=\"CAN\"`}</inlineCode>{` will be shown as the normal result.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /maximo/oslc/os/mxwodetail?gbcols=status,count.*&gbrange=status={[APPR:WAPPR]}\n`}</code></pre>\n    <p>{`Expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"count\": 2388,\n  \"status\": [\n    \"APPR\",\n    \"WAPPR\"\n  ],\n  \"collectionref\": \".../oslc/os/mxwodetail?oslc.where=status+in+%5B%22APPR%22%2C%22WAPPR %22%5D\"\n}\n`}</code></pre>\n    <h3>{`Numeric value`}</h3>\n    <p>{`The numeric value range is defined in a different way. For example, assume we need to get the count for workorder per wopriority and group them together for cerntain ranges. Let’s say the first range is 1<=worpriority<=3 and the second range is 4<=wopriority<7.`}</p>\n    <p>{`The rules to build the range is following the mathematics. ”`}{`[” and ”]`}{`” means greater or less than including the side value. ”(” and ”)” means greater or less than exclude the side value. `}</p>\n    <p>{`In our case, we will have, `}<inlineCode parentName=\"p\">{`gbrange=wopriorty={[1..3],[4..7)}`}</inlineCode></p>\n    <p>{`We will see the priority=7 group has been excluded from the ranged result.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxwodetail?gbcols=wopriority,count.*&gbrange=wopriority={[1..3],[4..7)}\n`}</code></pre>\n    <p>{`Expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"count\": 32,\n  \"collectionref\": \".../oslc/os/mxwodetail?&oslc.where=wopriority%3D7\",\n  \"wopriority\": 7\n},\n{\n  \"count\": 390,\n  \"collectionref\": \".../oslc/os/mxwodetail?&oslc.where=wopriority%3E%3D4+and+wopriority% 3C7\",\n  \"wopriority\": [\n    4.0,\n    7.0\n  ]\n},\n{\n  \"count\": 66415,\n  \"collectionref\": \".../oslc/os/mxwodetail?&oslc.where=wopriority%3E%3D1+and+wopriority% 3C%3D3\",\n  \"wopriority\": [\n    1.0,\n    3.0\n  ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}