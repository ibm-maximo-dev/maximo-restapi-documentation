"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[7593],{3624:function(e,t,a){a.d(t,{Z:function(){return k}});var r=a(7294),n=a(8650),s=a.n(n),o=a(1597),l=a(811),i=a(87),c=a(5900),u=a.n(c),m=function(e){var t,a=e.title,n=e.theme,s=e.tabs,o=void 0===s?[]:s;return r.createElement("div",{className:u()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=o.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===n,t))},r.createElement("div",{className:"bx--grid"},r.createElement("div",{className:"bx--row"},r.createElement("div",{className:"bx--col-lg-12"},r.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},d=function(e){var t=e.relativePagePath,a=e.repository,n=(0,o.useStaticQuery)("1364590287").site.siteMetadata.repository,s=a||n,l=s.baseUrl,i=s.subDirectory,c=l+"/edit/"+s.branch+i+"/src/pages"+t;return l?r.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},r.createElement("div",{className:"bx--col"},r.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},p=a(4703),g=a(1721),h=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,n=e.slug,l=n.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=s()(e,{lower:!0,strict:!0}),i=a===l,c=new RegExp(l+"/?(#.*)?$"),m=n.replace(c,a);return r.createElement("li",{key:e,className:u()((t={},t["PageTabs-module--selected-item--aBB0K"]=i,t),"PageTabs-module--list-item--024o6")},r.createElement(o.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return r.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},r.createElement("div",{className:"bx--grid"},r.createElement("div",{className:"bx--row"},r.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},r.createElement("nav",{"aria-label":t},r.createElement("ul",{className:"PageTabs-module--list--xLqxG"},i))))))},t}(r.Component),b=h,v=a(7296),f=a(5387),E=a(3732),w=function(e){var t=e.date,a=new Date(t);return t?r.createElement(E.X2,{className:"last-modified-date-module--row--XJoYQ"},r.createElement(E.sg,null,r.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},k=function(e){var t=e.pageContext,a=e.children,n=e.location,c=e.Title,u=t.frontmatter,g=void 0===u?{}:u,h=t.relativePagePath,E=t.titleType,k=g.tabs,P=g.title,N=g.theme,y=g.description,T=g.keywords,x=g.date,S=(0,f.Z)().interiorTheme,C=(0,o.useStaticQuery)("2456312558").site.pathPrefix,A=C?n.pathname.replace(C,""):n.pathname,I=k?A.split("/").filter(Boolean).slice(-1)[0]||s()(k[0],{lower:!0}):"",M=N||S;return r.createElement(i.Z,{tabs:k,homepage:!1,theme:M,pageTitle:P,pageDescription:y,pageKeywords:T,titleType:E},r.createElement(m,{title:c?r.createElement(c,null):P,label:"label",tabs:k,theme:M}),k&&r.createElement(b,{title:P,slug:A,tabs:k,currentTab:I}),r.createElement(v.Z,{padded:!0},a,r.createElement(d,{relativePagePath:h}),r.createElement(w,{date:x})),r.createElement(p.Z,{pageContext:t,location:n,slug:A,tabs:k,currentTab:I}),r.createElement(l.Z,null))}},3626:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return l},default:function(){return u}});var r=a(3366),n=(a(7294),a(4983)),s=a(3624),o=["components"],l={},i={_frontmatter:l},c=s.Z;function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,n.kt)(c,Object.assign({},i,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"The REST APIs have a tight integration with the automation scripts. Automation scripts can be used to develop custom APIs. The following example call describes how automation scripts interact with REST APIs."),(0,n.kt)("p",null,"To find the total number of work that is in progress and service requests in a given site, you need to create an API since there is no out-of-the-box API for this task. Since this is a REST API with a JSON response, you can use the JavaScript language for scripting. You call this API ",(0,n.kt)("strong",{parentName:"p"},"countofwoandsr"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"GET /oslc/script/countofwoandsr?site=ABC\n")),(0,n.kt)("p",null,"The response in JSON is shown:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "wocount": 100,\n  "srcount": 20,\n  "total": 120\n}\n')),(0,n.kt)("p",null,"You can write the following script for this API:"),(0,n.kt)("p",null,"Script Name: countofwoandsr "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'importPackage(Packages.psdi.server);\n\nvar resp = {};\nvar site = request.getQueryParam("site"); var woset = MXServer.getMXServer().getMboSet("workorder",request.getUserInfo()); woset.setQbe("siteid","="+site);\nvar woCount = woset.count(); resp.wocount = woCount;\n\nvar srset = MXServer.getMXServer().getMboSet("sr",request.getUserInfo()); srset.setQbe("siteid","="+site);\nvar srCount = srset.count(); resp.srcount = srCount; resp.total = srCount+woCount;\n \nvar responseBody = JSON.stringify(resp);\n')),(0,n.kt)("p",null,"After you save the script, open your browser and initiate the GET request to validate the results."),(0,n.kt)("p",null,"You can also use automation scripts for implementing custom queries and custom actions."))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-autoscript-autoscript-mdx-6e3c0dfee3b0c5bda37b.js.map