"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[4972],{3624:function(e,t,a){a.d(t,{Z:function(){return y}});var n=a(7294),r=a(8650),l=a.n(r),i=a(1597),s=a(811),o=a(87),c=a(5900),d=a.n(c),m=function(e){var t,a=e.title,r=e.theme,l=e.tabs,i=void 0===l?[]:l;return n.createElement("div",{className:d()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=i.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},u=function(e){var t=e.relativePagePath,a=e.repository,r=(0,i.useStaticQuery)("1364590287").site.siteMetadata.repository,l=a||r,s=l.baseUrl,o=l.subDirectory,c=s+"/edit/"+l.branch+o+"/src/pages"+t;return s?n.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},n.createElement("div",{className:"bx--col"},n.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},p=a(4703),h=a(1721),g=function(e){function t(){return e.apply(this,arguments)||this}return(0,h.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,r=e.slug,s=r.split("/").filter(Boolean).slice(-1)[0],o=a.map((function(e){var t,a=l()(e,{lower:!0,strict:!0}),o=a===s,c=new RegExp(s+"/?(#.*)?$"),m=r.replace(c,a);return n.createElement("li",{key:e,className:d()((t={},t["PageTabs-module--selected-item--aBB0K"]=o,t),"PageTabs-module--list-item--024o6")},n.createElement(i.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--xLqxG"},o))))))},t}(n.Component),b=g,E=a(7296),v=a(5387),f=a(3732),w=function(e){var t=e.date,a=new Date(t);return t?n.createElement(f.X2,{className:"last-modified-date-module--row--XJoYQ"},n.createElement(f.sg,null,n.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},y=function(e){var t=e.pageContext,a=e.children,r=e.location,c=e.Title,d=t.frontmatter,h=void 0===d?{}:d,g=t.relativePagePath,f=t.titleType,y=h.tabs,k=h.title,x=h.theme,N=h.description,P=h.keywords,T=h.date,C=(0,v.Z)().interiorTheme,D=(0,i.useStaticQuery)("2456312558").site.pathPrefix,Z=D?r.pathname.replace(D,""):r.pathname,B=y?Z.split("/").filter(Boolean).slice(-1)[0]||l()(y[0],{lower:!0}):"",H=x||C;return n.createElement(o.Z,{tabs:y,homepage:!1,theme:H,pageTitle:k,pageDescription:N,pageKeywords:P,titleType:f},n.createElement(m,{title:c?n.createElement(c,null):k,label:"label",tabs:y,theme:H}),y&&n.createElement(b,{title:k,slug:Z,tabs:y,currentTab:B}),n.createElement(E.Z,{padded:!0},a,n.createElement(u,{relativePagePath:g}),n.createElement(w,{date:T})),n.createElement(p.Z,{pageContext:t,location:r,slug:Z,tabs:y,currentTab:B}),n.createElement(s.Z,null))}},5136:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return s},default:function(){return d}});var n=a(3366),r=(a(7294),a(4983)),l=a(3624),i=["components"],s={},o={_frontmatter:s},c=l.Z;function d(e){var t=e.components,a=(0,n.Z)(e,i);return(0,r.kt)(c,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following example demonstrates the usage of the SYNC header, which is used when we want to avoid providing the individual asset url (with the rest id) and instead just want to use the collection url. The record is identified by primary keys. If it exists, the action is same as PATCH (or MERGE). If the keys doesnâ€™t match with any existing records, a new record will be created. The same could have been achieved using the asset url with the rest id and a x-method-override value as PATCH."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /oslc/os/mxapiasset?lean=1\nx-method-override: SYNC\npatchtype: MERGE\n")),(0,r.kt)("p",null,"Post body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "assetnum":"13150",\n  "siteid":"BEDFORD",\n  "downtimereport":[\n    {\n      "isdowntimereport":"1",\n      "startdate": "2019-07-17T22:57:56-04:00",\n      "enddate":"2019-07-17T22:58:59-04:00",\n      "code":"BRKDWN"\n    }\n  ]\n}\n')))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-crud-sync-mdx-f0ce2f030b1ac80cf879.js.map