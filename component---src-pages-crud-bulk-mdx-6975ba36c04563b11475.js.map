{"version":3,"file":"component---src-pages-crud-bulk-mdx-6975ba36c04563b11475.js","mappings":"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","sources":["webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://mas-playbook/./src/pages/crud/bulk.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`With Maximo RESTful JSON API, you can process multiple resources with multiple operations in a single transaction. The bulk process is supported only by using collection URLs. You can use the POST method and x-method override value BULK in the header.`}</p>\n    <p>{`The multiple resources and operations are provided in the message body with a JSON array. Each resource is like the object used to create mbo. It contains data and `}<em parentName=\"p\">{`_action`}</em>{` attribute which indicates operation like add, update or delete.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Operation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data Object Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CREATE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"assetnum\": \"test-5\", \"siteid\": \"BEDFORD\", \"description\": \"TS test 5\",\"_action\":\"Add\"}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UPDATE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"href\": \"...\", \"description\": \"New description\",\"_action\":\"Update\"}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DELETE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"href\": \"...\", \"_action\": \"Delete\"}`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Unless there is a syntax type of error in your JSON data for bulk load, you will always get a response code of 200. However, you need to process the response to determine which resources were updated successfully.`}</p>\n    <h2>{`Multiple Resources Creation with BULK`}</h2>\n    <p>{`You can create multiple resources in a single transaction. As the regular creation, each of the resources go through the validation process. And the response for each of the resources are shown in response JSON.`}</p>\n    <p>{`NOTE: The processing performs a Commit for each resource.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset?lean=1\nX-method-override: BULK \n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"assetnum\": \"test-1\",\n    \"siteid\": \"BEDFORD\",\n    \"description\": \"TS test 1\",\n    \"_action\": \"Add\"\n  },\n  {\n    \"assetnum\": \"test-2\",\n    \"siteid\": \"BEDFORD\",\n    \"description\": \"TS test 2\",\n    \"_action\": \"Add\"\n  }\n]\n`}</code></pre>\n    <p>{`Response JSON:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"_responsemeta\": {\n      \"status\": \"201\",\n      \"Location\": \"oslc/os/mxapiasset/_VEVTVC0xL0JFREZPUkQ-\"\n    }\n  },\n  {\n    \"_responsemeta\": {\n      \"status\": \"201\",\n      \"Location\": \"oslc/os/mxapiasset/_VEVTVC0yL0JFREZPUkQ-\"\n    }\n  }\n]\n`}</code></pre>\n    <p>{`If the first asset failed the validation process by having the invalid site, the http response code is still be 200. However, the error message similar to the messages in the following example is shown in the response:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset?lean=1\nX-method-override: BULK \n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"assetnum\": \"test-3\",\n    \"siteid\": \"BEDFORDXXYY\",\n    \"description\": \"TS test 1\",\n    \"_action\": \"Add\"\n  },\n  {\n    \"assetnum\": \"test-4\",\n    \"siteid\": \"BEDFORD\",\n    \"description\": \"TS test 2\",\n    \"_action\": \"Add\"\n  }\n]\n`}</code></pre>\n    <p>{`Response JSON:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"_responsedata\": {\n      \"Error\": {\n        \"errorattrname\": \"siteid\",\n        \"extendedError\": {\n          \"moreInfo\": {\n            \"href\": \"oslc/error/messages/BMXAA4153E\"\n          }\n        },\n        \"errorobjpath\": \"asset\",\n        \"correlationid\": null,\n        \"reasonCode\": \"BMXAA4153E\",\n        \"message\": \"BMXAA4153E - BEDFORDXXYY is not a valid site. Enter a valid Site value as defined in the Organization Application.\",\n        \"statusCode\": \"400\"\n      }\n    },\n    \"_responsemeta\": {\n      \"status\": \"400\"\n    }\n  },\n  {\n    \"_responsemeta\": {\n      \"status\": \"201\",\n      \"Location\": \"oslc/os/mxapiasset/_VEVTVC00L0JFREZPUkQ-\"\n    }\n  }\n]\n`}</code></pre>\n    <p>{`The first asset errored out because of invalid site and hence returns a  400 with an error message. The second asset returns a 201 with the URI to the newly created asset resource. The overall HTTP response code would still be 200. In the above case, even if both the asset json faced a business validation error, the overall response code would still be 200. The only cases you will see an error status is when the request is structurally invalid (say invalid json) or maybe for some request level error like the authentication failed.`}</p>\n    <p>{`We also support bulk change for actions, for example, change status as shown below:\nFor more info about Actions, see: `}<a parentName=\"p\" {...{\n        \"href\": \"/maximo-restapi-documentation/action/action\"\n      }}>{`Action`}</a></p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiwodetail?action=wsmethod:changeStatus\nX-method-override: BULK\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"status\": \"APPR\",\n    \"href\": \"...\"\n  },\n  {\n    \"status\": \"INPRG\",\n    \"href\": \"...\"\n  }\n]\n`}</code></pre>\n    <p>{`The response format has not changed.`}</p>\n    <h2>{`Multiple Operations with BULK`}</h2>\n    <p>{`The examples in first section shows the creation of multiple assets using the BULK processing. You can also use BULK to perform a mix of create, update and delete of asset resources in a single transaction.`}</p>\n    <p>{`To support this, simply change the `}<em parentName=\"p\">{`_action`}</em>{` value from `}<inlineCode parentName=\"p\">{`Add`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`Update`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Delete`}</inlineCode></p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Operation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Data Object Example`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CREATE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"_action\":\"Add\"}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`UPDATE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"_action\":\"Update\"}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DELETE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`{\"_action\": \"Delete\"}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`MERGE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`?`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Below is an example JSON data that will`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Update an asset with a ‘New Description’`}</li>\n      <li parentName=\"ul\">{`Create a new asset (test-100)`}</li>\n      <li parentName=\"ul\">{`Delete an asset`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset?lean=1\nx-method-override: BULK\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"description\": \"New Description\",\n    \"_action\": \"Update\"\n  },\n  {\n    \"assetnum\": \"test-100\",\n    \"siteid\": \"BEDFORD\",\n    \"description\": \"New Asset 100\",\n    \"_action\": \"Add\"\n  },\n  {\n    \"href\": \"...\",\n    \"_Action\": \"Delete\"\n  }\n]\n`}</code></pre>\n    <p>{`As with the Creation example earlier in this section, the response code will be a 200 but you must examine the response information in the response JSON body to determine if processing of each asset was successful or not.`}</p>\n    <h2>{`allornothing header`}</h2>\n    <p>{`The default functionality for the bulk post is that it will update those which it can. The result will be returned as an array containing the ones which succeeded and the ones which had failed.\n`}<inlineCode parentName=\"p\">{`allornothing`}</inlineCode>{` header can be used to control whether BULK commits at the end. When the value is set to 1, if any of the the updates in the bulk post fails, all updates will not go through resulting in no records updated.`}</p>\n    <p>{`Here is the example of allornothing value is 1. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset?lean=1\nx-method-override: BULK\nallornothing: 1\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n  {\n    \"description\": \"New Description\",\n    \"_action\": \"Update\"\n  },\n  {\n    \"assetnum\": \"test-100\",\n    \"siteid\": \"BEDFORD\",\n    \"description\": \"New Asset 100\",\n    \"_action\": \"Add\"\n  },\n  {\n    \"href\": \"...\",\n    \"_Action\": \"Delete\"\n  }\n]\n`}</code></pre>\n    <p>{`In this case, assume the add action fails due to some reason, the Update and Delete action will also be cancelled. No changes will be committed to system. The changes will only be made if all updates passes.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}