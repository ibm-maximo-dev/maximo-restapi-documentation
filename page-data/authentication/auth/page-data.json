{"componentChunkName":"component---src-pages-authentication-auth-mdx","path":"/authentication/auth/","result":{"pageContext":{"frontmatter":{"title":"Authentication"},"relativePagePath":"/authentication/auth.mdx","titleType":"append","MdxNode":{"id":"4a465ea2-452f-5767-b45e-c1c795d072e0","children":[],"parent":"9f887de8-a28a-564c-93c4-cd71304cd5e6","internal":{"content":"---\ntitle: Authentication\n---\n\nThis section describes the most common forms of authentication that is used in deployments for Maximo Asset Management and how to use the REST APIs for those authentication schemes.\n\n## Maximo native authentication\n\nWith native authentication, Maximo Asset Management is configured to manage the user repository along with the user credentials. Maximo Asset Management is responsible for authenticating the incoming REST call. The REST API expects the HTTP request with a **MAXAUTH** request header that has a base64 encoded userid:password. The following example shows a sample request:\n\n```http\nPOST /oslc/login\nmaxauth: <base64 encoded user:pass>\n<no body required>\n```\n\n\n## LDAP based authentications\n\nWith LDAP based authentication, authentication for Maximo Asset Management is managed and validated by the application server.\n\n### BASIC\n\nWith BASIC authentication, authentication credentials in the application server are presented in the following format:\n\n```\nPOST /oslc/login\nAuthorization: BASIC <base64 encoded user:pass>\n<no body required>\n```\n\n### FORM\n\nWith FORM authentication, authentication credentials are presented in the following format:\n\n```\nPOST /j_security_check\nContent-type: application/x-www-form-urlencoded\nj_username=<userid>&j_password=<password>\n```\n\nSince this FORM request is a form encoded POST, the user ID and password values need to be URL encoded values. The response for this request will have the jsessionid cookie along with Ltpa token cookies (for Websphere). These cookies need to be reused for the subsequent API calls.\n\nIt is recommended for all authentication schemes that the authenticated session is reused for subsequent REST API calls by replaying the session and authentication based cookies from a successful authentication response. This helps with performance as the subsequent API calls reuse the session and does not need to reauthenticate for every request.\n\nSample JAVA client code for each of these authentication schemes can be referenced from the MaximoConnector.java code (method setAuth(..)) in the [Maximo Connector](https://github.com/ibmmaximorestjsonapis/maximorestclient/blob/master/src/com/ibm/maximo/oslc/MaximoConnector.java) code.","type":"Mdx","contentDigest":"2f726307dea888e63d5992ea3b5fbfc0","owner":"gatsby-plugin-mdx","counter":158},"frontmatter":{"title":"Authentication"},"exports":{},"rawBody":"---\ntitle: Authentication\n---\n\nThis section describes the most common forms of authentication that is used in deployments for Maximo Asset Management and how to use the REST APIs for those authentication schemes.\n\n## Maximo native authentication\n\nWith native authentication, Maximo Asset Management is configured to manage the user repository along with the user credentials. Maximo Asset Management is responsible for authenticating the incoming REST call. The REST API expects the HTTP request with a **MAXAUTH** request header that has a base64 encoded userid:password. The following example shows a sample request:\n\n```http\nPOST /oslc/login\nmaxauth: <base64 encoded user:pass>\n<no body required>\n```\n\n\n## LDAP based authentications\n\nWith LDAP based authentication, authentication for Maximo Asset Management is managed and validated by the application server.\n\n### BASIC\n\nWith BASIC authentication, authentication credentials in the application server are presented in the following format:\n\n```\nPOST /oslc/login\nAuthorization: BASIC <base64 encoded user:pass>\n<no body required>\n```\n\n### FORM\n\nWith FORM authentication, authentication credentials are presented in the following format:\n\n```\nPOST /j_security_check\nContent-type: application/x-www-form-urlencoded\nj_username=<userid>&j_password=<password>\n```\n\nSince this FORM request is a form encoded POST, the user ID and password values need to be URL encoded values. The response for this request will have the jsessionid cookie along with Ltpa token cookies (for Websphere). These cookies need to be reused for the subsequent API calls.\n\nIt is recommended for all authentication schemes that the authenticated session is reused for subsequent REST API calls by replaying the session and authentication based cookies from a successful authentication response. This helps with performance as the subsequent API calls reuse the session and does not need to reauthenticate for every request.\n\nSample JAVA client code for each of these authentication schemes can be referenced from the MaximoConnector.java code (method setAuth(..)) in the [Maximo Connector](https://github.com/ibmmaximorestjsonapis/maximorestclient/blob/master/src/com/ibm/maximo/oslc/MaximoConnector.java) code.","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/src/pages/authentication/auth.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}