{"componentChunkName":"component---src-pages-systemprops-mdx","path":"/systemprops/","result":{"pageContext":{"frontmatter":{"title":"Setting and getting system properties in Maximo using REST apis"},"relativePagePath":"/systemprops.mdx","titleType":"append","MdxNode":{"id":"915d7290-6eb1-5c04-8de8-050f0fdb9052","children":[],"parent":"c7454f23-36c4-5611-9073-8c680b79ceea","internal":{"content":"---\ntitle: Setting and getting system properties in Maximo using REST apis\n---\n\nIn Maximo the SYSTEM application service has annotated methods that are leveraged by the SOAP and REST framework to access system properties. Below is an example to fetch the system property.\n\n```\nGET /oslc/service/system?action=wsmethod:getProperty&propName=<property name>\n```\n\nExpected Result:\n```json\n{\n  \"return\": \"value of the property as available in that maximo server\"\n}\n```\n\nSimilarly one can get a list of property values based on the query below\n\n```\nGET /oslc/service/system?action=wsmethod:getProperties&propNames=mxe.oslc.webappurl,mxe.apikeyforloggedinuser\n```\n\nExpected Result:\n```json\n{\n    \"mxe.oslc.webappurl\": \"http://localhost:7001/maximo/oslc/\",\n    \"mxe.apikeyforloggedinuser\": \"0\"\n}\n```\n\nNote that the response format is different and that is because of the way the Java service methods have been defined in Maximo System service.\nBelow we show the api to set a property\n\n```\nPOST /oslc/service/system?action=wsmethod:setProperty\n```\n\nBody:\n```json\n{\n  \"propName\": \"mxe.oslc.webappurl\",\n  \"serverName\": \"COMMON\",\n  \"propValue\": \"http://locahost:9080/maximo/oslc\"\n}\n```\nNow this will also cause the live refresh (if allowed) on that property.","type":"Mdx","contentDigest":"8a2ade18ebbefad2e8085e8bb7da69e4","owner":"gatsby-plugin-mdx","counter":149},"frontmatter":{"title":"Setting and getting system properties in Maximo using REST apis"},"exports":{},"rawBody":"---\ntitle: Setting and getting system properties in Maximo using REST apis\n---\n\nIn Maximo the SYSTEM application service has annotated methods that are leveraged by the SOAP and REST framework to access system properties. Below is an example to fetch the system property.\n\n```\nGET /oslc/service/system?action=wsmethod:getProperty&propName=<property name>\n```\n\nExpected Result:\n```json\n{\n  \"return\": \"value of the property as available in that maximo server\"\n}\n```\n\nSimilarly one can get a list of property values based on the query below\n\n```\nGET /oslc/service/system?action=wsmethod:getProperties&propNames=mxe.oslc.webappurl,mxe.apikeyforloggedinuser\n```\n\nExpected Result:\n```json\n{\n    \"mxe.oslc.webappurl\": \"http://localhost:7001/maximo/oslc/\",\n    \"mxe.apikeyforloggedinuser\": \"0\"\n}\n```\n\nNote that the response format is different and that is because of the way the Java service methods have been defined in Maximo System service.\nBelow we show the api to set a property\n\n```\nPOST /oslc/service/system?action=wsmethod:setProperty\n```\n\nBody:\n```json\n{\n  \"propName\": \"mxe.oslc.webappurl\",\n  \"serverName\": \"COMMON\",\n  \"propValue\": \"http://locahost:9080/maximo/oslc\"\n}\n```\nNow this will also cause the live refresh (if allowed) on that property.","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/src/pages/systemprops.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}