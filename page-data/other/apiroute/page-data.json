{"componentChunkName":"component---src-pages-other-apiroute-mdx","path":"/other/apiroute/","result":{"pageContext":{"frontmatter":{"title":"Creating New API Routes"},"relativePagePath":"/other/apiroute.mdx","titleType":"append","MdxNode":{"id":"5c3db0f8-267b-5abe-b4b8-695f80b4c6b2","children":[],"parent":"91e8d3b8-bd64-526a-8ddf-ebe979d895bf","internal":{"content":"---\ntitle: Creating New API Routes\n---\n\nMaximo REST APIs Maximo supports creating entirely new routes using API routes. Every existing Maximo API's are based on OOTB API Routes. \nTo create an new API, we can either approach it using automation scripting or by leveraging Java. \nFor automation scripting approach please refer to the automation scripting guide https://ibm-maximo-dev.github.io/maximo-autoscript-documentation/rest/scripthandler.\nFor the Java approach, one needs to extend the base class com.ibm.tivoli.maximo.oslc.provider.AbstractRouteHandler and implement the method \n`public OslcResourceResponse handleRequest(OslcRequest request)\tthrows MXException, RemoteException`\nThe `request` param encapsulates the REST call and provides information like UserInfo, HTTP headers, query parameters etc. A sample implementation is shown below\n\n```\npackage com.ibm.tivoli.maximo.oslc.provider;\n\npublic class SampleRouteHandler extends AbstractRouteHandler {\n  \t@Override\n\tpublic OslcResourceResponse handleRequest(OslcRequest request)\n\t\t\tthrows MXException, RemoteException \n\t{\n    if(this.resPath.size()==1)\n\t\t{\n\t\t\tthrow new MXApplicationException(\"oslc\",\"missingobjname\");\n\t\t}\n\t\tString objectName = this.resPath.get(1);//this is the object name like /oslc/sample/asset\n\n    UserInfo userInfo = request.getUserInfo();\n    //use userinfo to get MboSet and then get something - like count()\n    //form a json using the count\n    return this.okJSONResponse(jsonObject);\n  }\n}\n```","type":"Mdx","contentDigest":"5d05614676ffde0a1b568bf5378a72c2","owner":"gatsby-plugin-mdx","counter":136},"frontmatter":{"title":"Creating New API Routes"},"exports":{},"rawBody":"---\ntitle: Creating New API Routes\n---\n\nMaximo REST APIs Maximo supports creating entirely new routes using API routes. Every existing Maximo API's are based on OOTB API Routes. \nTo create an new API, we can either approach it using automation scripting or by leveraging Java. \nFor automation scripting approach please refer to the automation scripting guide https://ibm-maximo-dev.github.io/maximo-autoscript-documentation/rest/scripthandler.\nFor the Java approach, one needs to extend the base class com.ibm.tivoli.maximo.oslc.provider.AbstractRouteHandler and implement the method \n`public OslcResourceResponse handleRequest(OslcRequest request)\tthrows MXException, RemoteException`\nThe `request` param encapsulates the REST call and provides information like UserInfo, HTTP headers, query parameters etc. A sample implementation is shown below\n\n```\npackage com.ibm.tivoli.maximo.oslc.provider;\n\npublic class SampleRouteHandler extends AbstractRouteHandler {\n  \t@Override\n\tpublic OslcResourceResponse handleRequest(OslcRequest request)\n\t\t\tthrows MXException, RemoteException \n\t{\n    if(this.resPath.size()==1)\n\t\t{\n\t\t\tthrow new MXApplicationException(\"oslc\",\"missingobjname\");\n\t\t}\n\t\tString objectName = this.resPath.get(1);//this is the object name like /oslc/sample/asset\n\n    UserInfo userInfo = request.getUserInfo();\n    //use userinfo to get MboSet and then get something - like count()\n    //form a json using the count\n    return this.okJSONResponse(jsonObject);\n  }\n}\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/src/pages/other/apiroute.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}