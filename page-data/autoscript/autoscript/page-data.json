{"componentChunkName":"component---src-pages-autoscript-autoscript-mdx","path":"/autoscript/autoscript/","result":{"pageContext":{"frontmatter":{"title":"Automation Scripts"},"relativePagePath":"/autoscript/autoscript.mdx","titleType":"append","MdxNode":{"id":"6dbf974a-7d55-5b69-917d-3ec76c6ecccf","children":[],"parent":"fc7d7e77-527e-5a70-b50a-da458348571a","internal":{"content":"---\ntitle: Automation Scripts\n---\n\nThe REST APIs have a tight integration with the automation scripts. Automation scripts can be used to develop custom APIs. The following example call describes how automation scripts interact with REST APIs.\n\nTo find the total number of work that is in progress and service requests in a given site, you need to create an API since there is no out-of-the-box API for this task. Since this is a REST API with a JSON response, you can use the JavaScript language for scripting. You call this API __countofwoandsr__.\n\n```\nGET /oslc/script/countofwoandsr?site=ABC\n```\n\nThe response in JSON is shown:\n\n```json\n{\n  \"wocount\": 100,\n  \"srcount\": 20,\n  \"total\": 120\n}\n```\n\nYou can write the following script for this API:\n\nScript Name: countofwoandsr \n```js\nimportPackage(Packages.psdi.server);\n\nvar resp = {};\nvar site = request.getQueryParam(\"site\"); var woset = MXServer.getMXServer().getMboSet(\"workorder\",request.getUserInfo()); woset.setQbe(\"siteid\",\"=\"+site);\nvar woCount = woset.count(); resp.wocount = woCount;\n\nvar srset = MXServer.getMXServer().getMboSet(\"sr\",request.getUserInfo()); srset.setQbe(\"siteid\",\"=\"+site);\nvar srCount = srset.count(); resp.srcount = srCount; resp.total = srCount+woCount;\n \nvar responseBody = JSON.stringify(resp);\n```\n\nAfter you save the script, open your browser and initiate the GET request to validate the results.\n\nYou can also use automation scripts for implementing custom queries and custom actions.","type":"Mdx","contentDigest":"cbbb5bb3364445e0183cd87a310ed217","owner":"gatsby-plugin-mdx","counter":159},"frontmatter":{"title":"Automation Scripts"},"exports":{},"rawBody":"---\ntitle: Automation Scripts\n---\n\nThe REST APIs have a tight integration with the automation scripts. Automation scripts can be used to develop custom APIs. The following example call describes how automation scripts interact with REST APIs.\n\nTo find the total number of work that is in progress and service requests in a given site, you need to create an API since there is no out-of-the-box API for this task. Since this is a REST API with a JSON response, you can use the JavaScript language for scripting. You call this API __countofwoandsr__.\n\n```\nGET /oslc/script/countofwoandsr?site=ABC\n```\n\nThe response in JSON is shown:\n\n```json\n{\n  \"wocount\": 100,\n  \"srcount\": 20,\n  \"total\": 120\n}\n```\n\nYou can write the following script for this API:\n\nScript Name: countofwoandsr \n```js\nimportPackage(Packages.psdi.server);\n\nvar resp = {};\nvar site = request.getQueryParam(\"site\"); var woset = MXServer.getMXServer().getMboSet(\"workorder\",request.getUserInfo()); woset.setQbe(\"siteid\",\"=\"+site);\nvar woCount = woset.count(); resp.wocount = woCount;\n\nvar srset = MXServer.getMXServer().getMboSet(\"sr\",request.getUserInfo()); srset.setQbe(\"siteid\",\"=\"+site);\nvar srCount = srset.count(); resp.srcount = srCount; resp.total = srCount+woCount;\n \nvar responseBody = JSON.stringify(resp);\n```\n\nAfter you save the script, open your browser and initiate the GET request to validate the results.\n\nYou can also use automation scripts for implementing custom queries and custom actions.","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/src/pages/autoscript/autoscript.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}