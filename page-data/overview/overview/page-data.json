{"componentChunkName":"component---src-pages-overview-overview-mdx","path":"/overview/overview/","result":{"pageContext":{"frontmatter":{"title":"Overview"},"relativePagePath":"/overview/overview.mdx","titleType":"append","MdxNode":{"id":"ed55a7c1-2770-531e-9544-b66226d2183e","children":[],"parent":"6ea5aae2-7f0d-58ff-92b8-15990d541c3e","internal":{"content":"---\ntitle: Overview\n---\n\nThe new REST APIs for IBM(R) Maximo(R) Asset Management are a rewrite of the existing REST APIs that were released after Maximo Asset Management version 7.1, and are integrated in Maximo Asset Management releases starting with version 7.6.0.2. The new REST APIs are sometimes referred to as the REST/JSON APIs because of the end-to-end support for JSON data format. The benefits of using the new REST APIs include:\n\n\n  - Significantly enhanced support for querying Maximo data - subselects, related object queries, multi-attribute text search, custom queries (java/scripting).\n  - Support for system level actions - bookmarking, notifications, e-sig, image association and so on.\n  - Tight integration to automation scripts - query, actions, custom APIs.\n  - Enhanced REST support for Maximo Integration Framework (MIF) standard services - support JSON data type for those service methods.\n  - Metadata support using JSON schema.\n  - Supports dynamic query views.\n  - Support for `group by` queries.\n  - Supports custom JSON elements that are appended to the object structure JSON.\n  - Integration with the Maximo Asset Management cache framework.\n  - Integration with Maximo Asset Management formulas.\n  - Integration with federated Maximo business objects (MBOs).\n  - Support for API Keys.\n\n\nThe new REST APIs uses the same code base as the OSLC REST APIs, which are used by the IBM Maximo Anywhere platform. The new REST APIs are simpler to set up because you don't need to set up OSLC resources and sheds the namespaced JSON that the OSLC APIs require. Effectively, the new REST APIs are ready to be used when a Maximo package that is not customized is installed and setup with users and groups.\n\nA high-level overview of the architecture is illustrated in the following figure:\n\n![Architecture](rest_api_arch.jpg)\n\n[]()\n\nThe REST API call flows through the authentication phase, API routes, authorization, and then it interacts the with the Maximo artifacts, such as MBO’s, Workflows, and automation scripts. API routes are RESTlets (REST handlers) that provide the APIs for interfacing with various Maximo artifacts, such as MBOs, Automation scripts, Images, Permissions, and Schemas. This is more for the developers of the API to organically expand the footprint of the REST APIs to cover more parts of Maximo Asset Management.\n\nNote: Try out the APIs as you read through this document. You can install the JSON viewer plug-in for Firefox or Chrome to easily view the JSON documents from the API response. You can also use a tool, such as Chrome Postman, to make the POST calls with the API.\n\nThis document also assumes that you use the lean JSON format (JSON with no namespace) by setting the lean=1 query parameter at login. Note: It is recommended to set the lean=1 query parameter for all requests so that the request can move to another server as part of load balancing or if the original server fails over to a new server. For brevity this query parameter is omitted in most of the examples, but it is recommended that you add that while making the requests.\n\nThis document also assumes familiarity with Maximo object structures, which form the resources for the REST APIs. For more information about the new REST APIs, you can view the [REST API: Getting started](https://www.youtube.com/watch?v=zD6RRjjwJlo) video.","type":"Mdx","contentDigest":"7a30cff0494d93d78eb9adccad907b91","owner":"gatsby-plugin-mdx","counter":170},"frontmatter":{"title":"Overview"},"exports":{},"rawBody":"---\ntitle: Overview\n---\n\nThe new REST APIs for IBM(R) Maximo(R) Asset Management are a rewrite of the existing REST APIs that were released after Maximo Asset Management version 7.1, and are integrated in Maximo Asset Management releases starting with version 7.6.0.2. The new REST APIs are sometimes referred to as the REST/JSON APIs because of the end-to-end support for JSON data format. The benefits of using the new REST APIs include:\n\n\n  - Significantly enhanced support for querying Maximo data - subselects, related object queries, multi-attribute text search, custom queries (java/scripting).\n  - Support for system level actions - bookmarking, notifications, e-sig, image association and so on.\n  - Tight integration to automation scripts - query, actions, custom APIs.\n  - Enhanced REST support for Maximo Integration Framework (MIF) standard services - support JSON data type for those service methods.\n  - Metadata support using JSON schema.\n  - Supports dynamic query views.\n  - Support for `group by` queries.\n  - Supports custom JSON elements that are appended to the object structure JSON.\n  - Integration with the Maximo Asset Management cache framework.\n  - Integration with Maximo Asset Management formulas.\n  - Integration with federated Maximo business objects (MBOs).\n  - Support for API Keys.\n\n\nThe new REST APIs uses the same code base as the OSLC REST APIs, which are used by the IBM Maximo Anywhere platform. The new REST APIs are simpler to set up because you don't need to set up OSLC resources and sheds the namespaced JSON that the OSLC APIs require. Effectively, the new REST APIs are ready to be used when a Maximo package that is not customized is installed and setup with users and groups.\n\nA high-level overview of the architecture is illustrated in the following figure:\n\n![Architecture](rest_api_arch.jpg)\n\n[]()\n\nThe REST API call flows through the authentication phase, API routes, authorization, and then it interacts the with the Maximo artifacts, such as MBO’s, Workflows, and automation scripts. API routes are RESTlets (REST handlers) that provide the APIs for interfacing with various Maximo artifacts, such as MBOs, Automation scripts, Images, Permissions, and Schemas. This is more for the developers of the API to organically expand the footprint of the REST APIs to cover more parts of Maximo Asset Management.\n\nNote: Try out the APIs as you read through this document. You can install the JSON viewer plug-in for Firefox or Chrome to easily view the JSON documents from the API response. You can also use a tool, such as Chrome Postman, to make the POST calls with the API.\n\nThis document also assumes that you use the lean JSON format (JSON with no namespace) by setting the lean=1 query parameter at login. Note: It is recommended to set the lean=1 query parameter for all requests so that the request can move to another server as part of load balancing or if the original server fails over to a new server. For brevity this query parameter is omitted in most of the examples, but it is recommended that you add that while making the requests.\n\nThis document also assumes familiarity with Maximo object structures, which form the resources for the REST APIs. For more information about the new REST APIs, you can view the [REST API: Getting started](https://www.youtube.com/watch?v=zD6RRjjwJlo) video.","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/src/pages/overview/overview.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}