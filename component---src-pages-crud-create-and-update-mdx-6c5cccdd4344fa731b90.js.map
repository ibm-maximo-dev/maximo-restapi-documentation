{"version":3,"file":"component---src-pages-crud-create-and-update-mdx-6c5cccdd4344fa731b90.js","mappings":"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","sources":["webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://mas-playbook/./src/pages/crud/create_and_update.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Create resources`}</h2>\n    <p>{`Creating resources are typically completed by using the collection URI, which is the same URI you use to query the resources. For example, the API call for creating assets is shown in the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"assetnum\": \"ASSET1\",\n  \"siteid\": \"BEDFORD\",\n  \"description\": \"my first asset\"\n}\n`}</code></pre>\n    <p>{`After you create the asset, you get a response that contains a `}<inlineCode parentName=\"p\">{`location`}</inlineCode>{` header with the URI of the new asset. You can now use that `}<inlineCode parentName=\"p\">{`location`}</inlineCode>{` URI to fetch the new resource. Rather than doing a `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` to fetch the resource, you may want the response of the create to contain the new resource. For that, you can add the request header `}<inlineCode parentName=\"p\">{`properties`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`properties`}</inlineCode>{` header follows the syntax of the `}<a parentName=\"p\" {...{\n        \"href\": \"../query/selecting\"\n      }}>{`oslc.select`}</a>{` clause. You can use that to fetch all properties, partial set of properties, related MBO attributes, formula properties etc (everything that you can do with the select clause).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset \nproperties: *\n\n{\n  \"assetnum\": \"ASSET1\",\n  \"siteid\": \"BEDFORD\",\n  \"description\": \"my first asset\"\n}\n`}</code></pre>\n    <p>{`Or`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset \nproperties: assetnum,status\n\n{\n  \"assetnum\": \"ASSET1\",\n  \"siteid\": \"BEDFORD\",\n  \"description\": \"my first asset\"\n}\n`}</code></pre>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`properties`}</inlineCode>{` header removes the need to do an extra `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` for every create and update.`}</p>\n    <h2>{`Updating resources`}</h2>\n    <p>{`Now that an asset is created, you can update the asset. The following example shows how you can set a `}<inlineCode parentName=\"p\">{`location`}</inlineCode>{` and a `}<inlineCode parentName=\"p\">{`description`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`asset`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset/{rest id for the asset} \nx-method-override: PATCH\nproperties:*\n\n{\n  \"location\": \"BR300\",\n  \"description\": \"test asset desc\"\n}\n`}</code></pre>\n    <p>{`The URL has a `}<inlineCode parentName=\"p\">{`rest id`}</inlineCode>{` at the end of the collection URL. This URI is pointing to a member asset in the collection, which is why the `}<inlineCode parentName=\"p\">{`rest id`}</inlineCode>{` token is after the collection URI. `}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\nThe rest id is not the unique id for the Mbo. It's a generated id for the Mbo that is created using the primary-key attribute values. \n    </InlineNotification>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\nx-method-override:PATCH instructs the server side to update the resource. As with create, you can specify the properties request header, to get back the results of an update. The sample here shows a value of *. We would generally recommend avoiding use of * (unless you really want all properties) and instead use the selected set of properties that you care about (works our better for performance).\n    </InlineNotification>\n    <p>{`Note that we needed to fetch the URI of the `}<inlineCode parentName=\"p\">{`mxasset`}</inlineCode>{` resource in order to update it. The fetching of that URI can be done in two ways:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`We can get the URI as part of a GET collection query, which returns all select members with their URIs.`}</li>\n      <li parentName=\"ul\">{`As part of the response `}<inlineCode parentName=\"li\">{`location`}</inlineCode>{` header when we create a resource.`}</li>\n    </ul>\n    <p>{`Although this is the prevalent design for URI interaction in REST paradigm, in some cases you may not have the URI and still need to update the asset based on other key information.`}</p>\n    <h2>{`Add child objects`}</h2>\n    <p>{`To add some child objects, the following API example adds two `}<inlineCode parentName=\"p\">{`assetmeters`}</inlineCode>{` to the new asset.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset/{rest id for the asset} \nx-method-override: PATCH\npatchtype: MERGE \nproperties:*\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"description\": \"test asset desc\",\n  \"assetmeter\": [\n    {\n      \"metername\": \"TEMP-F\",\n      \"linearassetid\": 0\n    },\n    {\n      \"metername\": \"ABC\",\n      \"linearassetid\": 0\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`An extra request header called `}<inlineCode parentName=\"p\">{`patchtype`}</inlineCode>{` is used with a value of `}<inlineCode parentName=\"p\">{`MERGE`}</inlineCode>{`. This instructs the server to match the child objects - like `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` with the existing`}<inlineCode parentName=\"p\">{`assetmters`}</inlineCode>{` for this asset. If a match is found, that `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` gets updates with the request assetmeter. If a match is not found, an `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` is created. This action is called the `}<inlineCode parentName=\"p\">{`MERGE`}</inlineCode>{` API. For example, if the asset to be updated has three existing `}<inlineCode parentName=\"p\">{`assetmeters`}</inlineCode>{`, and the request contained one existing\n`}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` and one new `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{`, that asset will be having  4  `}<inlineCode parentName=\"p\">{`assetmeters`}</inlineCode>{`  with one newly created one and another updated `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` after the merge call.`}</p>\n    <p>{`To highlight the difference between a `}<inlineCode parentName=\"p\">{`PATCH`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`MERGE`}</inlineCode>{` call, you can run the same request without the `}<inlineCode parentName=\"p\">{`patchtype`}</inlineCode>{` header on another similar asset with  three `}<inlineCode parentName=\"p\">{` assetmeters`}</inlineCode>{`. The server side creates a new `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` and update the existing `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` like the `}<inlineCode parentName=\"p\">{`MERGE`}</inlineCode>{` call. Unlike the `}<inlineCode parentName=\"p\">{`MERGE`}</inlineCode>{` call, the `}<inlineCode parentName=\"p\">{`assetmeters`}</inlineCode>{` that were not in the request are deleted. In this example, only two `}<inlineCode parentName=\"p\">{` assetmeters`}</inlineCode>{` (that are in the request) remains in the asset. Thus in a `}<inlineCode parentName=\"p\">{`PATCH`}</inlineCode>{` request, the server side deletes all child objects that are not in the request payload.`}</p>\n    <h2>{`Updating child objects`}</h2>\n    <p>{`To update the child objects, the following example updates the `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` object to set the meter reading. Make sure that the `}<inlineCode parentName=\"p\">{`np`}</inlineCode>{` attributes, `}<inlineCode parentName=\"p\">{`newreading`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`newreadingdate`}</inlineCode>{` are included in the `}<inlineCode parentName=\"p\">{`MXAPIASSET`}</inlineCode>{` object structure.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset/{rest id for the asset} \nx-method-override: PATCH\npatchtype: MERGE \nproperties:*\n`}</code></pre>\n    <p>{`Post body:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"description\": \"test asset desc - updating temp meter\",\n  \"assetmeter\": [\n    {\n      \"metername\": \"TEMP-F\",\n      \"linearassetid\": 0,\n      \"newreading\": \"10\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Notice that the primary keys of the `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` - `}<inlineCode parentName=\"p\">{`metername`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`linearassetid`}</inlineCode>{` for the meter update are included. Another option that the API allows is to use the href URI for the `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{` instead of the primary keys, which is shown in the following example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-http\"\n      }}>{`POST /oslc/os/mxapiasset/{rest id for the asset} \nx-method-override: PATCH\npatchtype: MERGE \nproperties:*\n\n{\n  \"description\": \"test asset desc - updating temp meter with child uri\",\n  \"assetmeter\": [\n    {\n      \"href\": \"parent uri#encoded_child_keys_anchored\",\n      \"newreading\": \"10\"\n    }\n  ]\n}\n`}</code></pre>\n    <h2>{`Delete child objects`}</h2>\n    <p>{`The following request below shows how to selectively delete a child object:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset/{rest id for the asset} \nx-method-override: PATCH\npatchtype: MERGE\nproperties:*\n\n{\n  \"assetmeter\": [\n    {\n      \"metername\": \"TEMP-F\",\n      \"linearassetid\": 0,\n      \"_action\": \"Delete\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`Note the use of child level actions (`}<inlineCode parentName=\"p\">{`_action`}</inlineCode>{`) to delete the `}<inlineCode parentName=\"p\">{`assetmeter`}</inlineCode>{`. You could have also used the child href instead of the primary keys as shown before. You could have also used the http `}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{` method to delete the child object using the child object `}<inlineCode parentName=\"p\">{`localuri`}</inlineCode>{` URI.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`DELETE <assetmeter localuri>\n`}</code></pre>\n    <p>{`Note the local URI for a child object (in Object structure) is something you can use to refer directly to the child object. You cannot do the same with the child href as that is an anchored URI. For example, you cannot use the child href for http `}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{`.`}</p>\n    <p>{`By using the POST method with the `}<inlineCode parentName=\"p\">{`_action`}</inlineCode>{` child action, you can do a bulk delete of child objects, which you cannot do using the http `}<inlineCode parentName=\"p\">{`DELETE`}</inlineCode>{` method.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","name","_frontmatter","InlineNotification","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"sourceRoot":""}