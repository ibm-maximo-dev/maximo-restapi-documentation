"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[7882],{3624:function(e,t,a){a.d(t,{Z:function(){return f}});var i=a(7294),n=a(8650),r=a.n(n),s=a(1597),o=a(811),l=a(87),p=a(5900),c=a.n(p),u=function(e){var t,a=e.title,n=e.theme,r=e.tabs,s=void 0===r?[]:r;return i.createElement("div",{className:c()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=s.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===n,t))},i.createElement("div",{className:"bx--grid"},i.createElement("div",{className:"bx--row"},i.createElement("div",{className:"bx--col-lg-12"},i.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},h=function(e){var t=e.relativePagePath,a=e.repository,n=(0,s.useStaticQuery)("1364590287").site.siteMetadata.repository,r=a||n,o=r.baseUrl,l=r.subDirectory,p=o+"/edit/"+r.branch+l+"/src/pages"+t;return o?i.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},i.createElement("div",{className:"bx--col"},i.createElement("a",{className:"EditLink-module--link--IDrl1",href:p},"Edit this page on GitHub"))):null},d=a(4703),m=a(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,m.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,n=e.slug,o=n.split("/").filter(Boolean).slice(-1)[0],l=a.map((function(e){var t,a=r()(e,{lower:!0,strict:!0}),l=a===o,p=new RegExp(o+"/?(#.*)?$"),u=n.replace(p,a);return i.createElement("li",{key:e,className:c()((t={},t["PageTabs-module--selected-item--aBB0K"]=l,t),"PageTabs-module--list-item--024o6")},i.createElement(s.Link,{className:"PageTabs-module--link--Kz-7R",to:""+u},e))}));return i.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},i.createElement("div",{className:"bx--grid"},i.createElement("div",{className:"bx--row"},i.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},i.createElement("nav",{"aria-label":t},i.createElement("ul",{className:"PageTabs-module--list--xLqxG"},l))))))},t}(i.Component),y=k,g=a(7296),w=a(5387),b=a(3732),v=function(e){var t=e.date,a=new Date(t);return t?i.createElement(b.X2,{className:"last-modified-date-module--row--XJoYQ"},i.createElement(b.sg,null,i.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},f=function(e){var t=e.pageContext,a=e.children,n=e.location,p=e.Title,c=t.frontmatter,m=void 0===c?{}:c,k=t.relativePagePath,b=t.titleType,f=m.tabs,x=m.title,E=m.theme,T=m.description,N=m.keywords,P=m.date,S=(0,w.Z)().interiorTheme,M=(0,s.useStaticQuery)("2456312558").site.pathPrefix,A=M?n.pathname.replace(M,""):n.pathname,I=f?A.split("/").filter(Boolean).slice(-1)[0]||r()(f[0],{lower:!0}):"",O=E||S;return i.createElement(l.Z,{tabs:f,homepage:!1,theme:O,pageTitle:x,pageDescription:T,pageKeywords:N,titleType:b},i.createElement(u,{title:p?i.createElement(p,null):x,label:"label",tabs:f,theme:O}),f&&i.createElement(y,{title:x,slug:A,tabs:f,currentTab:I}),i.createElement(g.Z,{padded:!0},a,i.createElement(h,{relativePagePath:k}),i.createElement(v,{date:P})),i.createElement(d.Z,{pageContext:t,location:n,slug:A,tabs:f,currentTab:I}),i.createElement(o.Z,null))}},480:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return c}});var i=a(3366),n=(a(7294),a(4983)),r=a(3624),s=["components"],o={},l={_frontmatter:o},p=r.Z;function c(e){var t=e.components,a=(0,i.Z)(e,s);return(0,n.kt)(p,Object.assign({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Apikeys are tokens that can be used to make rest api calls without needing to provide the user credentials. Apikeys are created for a given Maximo user and the api calls made using that apikey effectively works in the context of the said user. This implies all the user’s permissions are respected in that api call.",(0,n.kt)("br",{parentName:"p"}),"\n","REST apis invoked using api keys use “silent” login. This implies that there is no MAXSESSION entries created. By default, there would not be any server-side web sessions. This implies that clients using rest apis with api keys, do not need to call the ",(0,n.kt)("inlineCode",{parentName:"p"},"/logout")," api as there is no persistent server-side session.\nApi keys can be created and revoked as needed. There is only one api key per user allowed at this point. Each of these api keys may have an expiry (in minutes). The expiry time is specified at the time of creation. An expiry time of -1 implies the key will never expire. The only way to invalidate the key would be revoke it manually.\nBelow we list the rest apis that can be used to create/revoke the api keys."),(0,n.kt)("h2",null,"Create/Revoke API Keys"),(0,n.kt)("p",null,"To create the api keys, login as the user for which you want to create the key and use the rest api shown below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"POST /oslc/apitoken/create\n")),(0,n.kt)("p",null,"Body:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "expiration": -1\n}\n')),(0,n.kt)("p",null,"This will respond back with a json containing the apikey value. Note that you can use this same api again to regerate the apikey. This "),(0,n.kt)("p",null,"To revoke that api key,"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"POST /oslc/apitoken/revoke\n")),(0,n.kt)("p",null,"As you may have noticed, the create and revoke apis do not take in any user name as the user name is implicit from the logged in user. "),(0,n.kt)("p",null,"In case, the adminitrator needs to do this for a given user, we can use the Object structure based apis using the MXAPIAPIKEY Object structure. "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"POST /oslc/os/mxapiapikey\n")),(0,n.kt)("p",null,"Body:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "expiration": -1,\n  "userid": "WILSON"\n}\n')),(0,n.kt)("p",null,"Note the userid maps to the MAXUSER.USERID attribute.\nThe administrator can also get a list of the apikeys using"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiapikey\n")),(0,n.kt)("p",null,"Administrator can also delete the api keys using the DELETE REST call"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"DELETE /oslc/os/mxapiapikey/{id}\n")),(0,n.kt)("p",null,"Note this Object structure was added only in 7611. For prior releases, customers can easily add a different object structure for this to do the same."),(0,n.kt)("p",null,"To make an api call using the api key, we need to add the apikey value as a query parameter or a request header to the rest api call. Note that it is recommended to use the apikey header (as opposed to the query parameter) for security reasons. Below is an example for fetching assets"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"GET /oslc/os/mxapiasset?apikey=<the apikey value>&lean=1\n")),(0,n.kt)("p",null,"While this model works out great for maximo authentication enabled deployments, it does not work out for app server authentication-based Maximo deployments. The reason being, in the latter model, the /oslc servlet is security constrained and hence the rest api calls would not be able to reach to the application code without the user credentials. "),(0,n.kt)("p",null,"To overcome that, we have added a route /api in the maximouiweb modules web.xml which maps to the same oslc servlet. The mapping is shown below"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<servlet-mapping>\n    <servlet-name>OSLCServlet</servlet-name>\n    <url-pattern>/api/*</url-pattern>\n</servlet-mapping>\n")),(0,n.kt)("p",null,"We also need to make sure this mapping should not get protected using security-constraints. This way we can make sure the application server security would not interfere with the apikey way of authenticating the rest api calls. This /api mapping is not present in the maximouiweb modules web.xml file for 7609 or 7610 releases. If the need is to leverage the apikeys in app-server authentication enabled Maximo, we recommend adding this mapping to the maximouiweb modules web.xml."),(0,n.kt)("p",null,"With this mapping the rest api calls would look like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"GET /api/os/mxapiasset?apikey=<the apikey value>&lean=1\nx-public-uri:http://host:port/maximo/api\n")),(0,n.kt)("p",null,"Note that without the x-public-uri request header, the response json will have href urls pointing to the /oslc context and not to the /api context.\nNote that this call works for app server security, as the /api context is not protected using the security-constraints. The rest api framework makes sure that the rest api call does not go through unless the apikey is provided. "),(0,n.kt)("p",null,"This model with apikeys (along with the /api route) provides a way to make headless client calls to the rest apis when Maximo is configured with interactive authentication schemes like SAML/OIDC which otherwise would need some browser-based interaction to authenticate. "),(0,n.kt)("h2",null,"Securing API keys"),(0,n.kt)("p",null,"Starting 7612, all apikeys will be encrypted at storage. This implies that anyone upgrading from a prior version will have their apikeys encrypted by the upgrade process. We introdced a maximo property mxe.apikeysysusers that can be leveraged to set comma separated list of user ids that we would want to block from creating apikeys by using the MXAPIAPIKEY Object structure. These users can however create their own apikeys using the /apitoken/create api. "),(0,n.kt)("p",null,"There is also another maximo property mxe.apikeyforloggedinuser which when set to 1, will only allow the logged in user to create an apikey for that user only. This implies that with this property set to 1, the admin cannot create apikeys for other users. This setting is turned off by default."),(0,n.kt)("p",null,"Maximo apikey creation, supports externally generated apikey tokens. By default, the apikeys are Maximo generated unique ids. Maximo also allows this key to be generated externally. Maximo admin can turn off this support by setting the property mxe.allowexternalapikey to 0. "))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-authentication-apikey-mdx-48d9a57321ec45f1997c.js.map