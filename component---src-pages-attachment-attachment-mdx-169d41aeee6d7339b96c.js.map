{"version":3,"file":"component---src-pages-attachment-attachment-mdx-169d41aeee6d7339b96c.js","mappings":"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","sources":["webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://mas-playbook/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://mas-playbook/./src/pages/attachment/attachment.mdx"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/maximo-app-framework/maximo-restapi-documentation/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Attachments in Maximo Asset Management are documents, files, or images that are attached to a resource such as an Asset or Service Request. The RESTful API supports the retrieval of attachments that are associated with resources.`}</p>\n    <p>{`To fetch, create, update, or delete an attachment for a resource by using API, such as `}<inlineCode parentName=\"p\">{`MXAPIASSET`}</inlineCode>{`, complete the following tasks:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Enable the attachments feature.`}</li>\n      <li parentName=\"ol\">{`Configure the `}<inlineCode parentName=\"li\">{`MXAPIASSET`}</inlineCode>{` object structure with the `}<inlineCode parentName=\"li\">{`DOCLINKS`}</inlineCode>{` MBO as a child to the `}<inlineCode parentName=\"li\">{`ASSET`}</inlineCode>{` object.`}</li>\n    </ol>\n    <h2>{`Fetch the attachments`}</h2>\n    <p>{`When you query a specific resource (using its ID) that has an attachment, a doclinks URL is returned for the attachment:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset/{rest id}?lean=1\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"assetnum\": \"1001\",\n  \"changedate\": \"1999-03-31T16:53:00-05:00\",\n  \"doclinks\": {\n    \"href\": \"oslc/os/mxapiasset/{rest id}/doclinks\"\n  }\n}\n`}</code></pre>\n    <p>{`If you use the `}<inlineCode parentName=\"p\">{`doclinks`}</inlineCode>{` URL from the JSON data in the previous example, you receive a list of attached documents (reference to those documents) with the metadata.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET oslc/os/mxapiasset/{rest id}/doclinks?lean=1\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"href\": \"oslc\\\\/os\\\\/mxapiasset\\\\/{rest id}\\\\/doclinks\",\n  \"member\": [\n    {\n      \"href\": \"oslc\\\\/os\\\\/mxapiasset\\\\/{rest id}\\\\/doclinks\\\\/75\",\n      \"localref\": \"oslc\\\\/os\\\\/mxapiasset\\\\/{rest id}\\\\/doclinks\\\\/0-75\",\n      \"describedBy\": {\n        \"identifier\": \"75\",\n        \"fileName\": \"linearasset_screenshot.png\",\n        \"upload\": false,\n        \"created\": \"2023-06-07T13:18:49-04:00\",\n        \"docType\": \"Attachments\",\n        \"changeby\": \"WILSON\",\n        \"format\": {\n          \"href\": \"http:\\\\/\\\\/purl.org\\\\/NET\\\\/mediatypes\\\\/image\\\\/png\",\n          \"label\": \"image\\\\/png\"\n        },\n        \"show\": false,\n        \"description\": \"linearasset_screenshot.png\",\n        \"ownerid\": 53,\n        \"ownertable\": \"ASSET\",\n        \"title\": \"1020\",\n        \"docinfoid\": 57,\n        \"copylinktowo\": false,\n        \"createby\": \"WILSON\",\n        \"urlType\": \"FILE\",\n        \"attachmentSize\": 3045941,\n        \"getlatestversion\": true,\n        \"printthrulink\": true,\n        \"modified\": \"2023-06-07T13:19:09-04:00\",\n        \"href\": \"oslc\\\\/os\\\\/mxapiasset\\\\/{rest id}\\\\/doclinks\\\\/meta\\\\/75\",\n        \"addinfo\": false\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`.../doclinks/{id}`}</inlineCode>{` URL is the link to the actual attachment file.  The content of the attachment can be fetched by,`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET oslc/os/mxapisset/{rest id}/doclinks/{id}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`.../doclinks/meta/{id}`}</inlineCode>{` URL is the link to the metadata for the attachment file.`}</p>\n    <h2>{`Create the attachments`}</h2>\n    <p>{`The API supports the creation of attachments that are associated to resources. For example, after creating an asset, you want to attach a PDF file that describes the maintenance procedures for that asset. `}</p>\n    <p>{`To create a new attachment, you will need an doclinks URL for resource. As shown in fetching the attachment, take MXASSET as an example, the URL looks like as following,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"doclinks\": {\n  \"href\": \"oslc/os/mxapiasset/{asset rest id}/doclinks\"\n},\n\n`}</code></pre>\n    <p>{`An attachment is made up of two components:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Attachment file: You create an attachment by using the HTTP POST with binary content or base64 binary content. There is currently no support for multi-part messages.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Related metadata of the attachment: When creating an attachment for a resource there is a limited set of metadata that can be provided (along with the file) using HTTP Headers:`}</p>\n      </li>\n    </ol>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Header`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`slug`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File Name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The name of the attachment file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`encslug`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`File Name`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If the attachment file name has non-ascii characters it can be provided in the header base64 encoded. It is suggested that you always base64 encode your file name using this property if you believe you might have a mix of non-ascii characters`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Content-Type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`“text/plain”`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Based on the type of attachment - text/plain supports a .txt file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x-document-meta`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attachments`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tied to the DOCTYPES domain that defines the supported attachment types`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x-document-description`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The description of the document`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`x-document-encdescription`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`If the description has non-ASCII characters, it can be provided in the header base64 encoded. It is suggested that you always base64 encode your description using this property if you believe you might have a mix of non-ascii characters`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`custom-encoding`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`“base64”`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`This header facilitates testing using a browser client such as RESTClient (for FF). Allows you to paste in a base64 encoded image into the Body of the tool (otherwise you need to test with programmatic tool). You can use public tools to base64 encode your image file`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset/{asset rest id}/doclinks \nx-document-meta: FILE/Attachments\nslug: test.txt\nx-document-description:test file \n\nBody:\nHello this is my first test file\n`}</code></pre>\n    <p>{`The response Location header contains the URL for the uploaded attachment (as shown in the following example).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Location: oslc/os/mxapiasset/{asset rest id}/doclinks/{id}\n`}</code></pre>\n    <p>{`The GET on that URL will get the attached document that was uploaded before. Along with that, it also has a response header that is named Link, which has a URL to the metadata for this attachment.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Link: oslc/os/mxapiasset/{asset rest id}/doclinks/meta/{id}\n`}</code></pre>\n    <p>{`This `}<inlineCode parentName=\"p\">{`meta`}</inlineCode>{` link can be used to get the metadata for the attachment. A `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` on that link will fetch the JSON representation of the document description, mimetype etc as shown in the following example.`}</p>\n    <p>{`To create attachments of a WWW (URL) type, you can use the following request as an example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasse/{asset rest id}/doclinks\nx-document-meta: URL/Attachments\nslug: CNN\ncontent-location: www.cnn.com\nx-document-description:cnn web site\n`}</code></pre>\n    <p>{`In the response, you get a Location header with the URL of the newly created URL attachment. Note that the URL was set on the content-location request header. The `}<inlineCode parentName=\"p\">{`slug`}</inlineCode>{` request header is used as the name of the attachment.`}</p>\n    <p>{`Another important thing to note: the `}<inlineCode parentName=\"p\">{`x-document-meta`}</inlineCode>{` request header has 2 parts - the URL type and document type. The URL type is a synonymdomain in Maximo Asset Management and hence hardcoding the values `}<inlineCode parentName=\"p\">{`FILE`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`URL`}</inlineCode>{` maybe a problem in case those values have been modified during installation. You could potentially do one of the 2`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Avoid specifying the URL type altogether. The API framework defaults to the URL type based on your request. For example, if the request has the content-location header, it will be treated as a URL type with internal value of WWW. Otherwise it will treated as a URL type of FILE. In each of these cases the system will use the default external value for these internal values (FILE or WWW).`}</li>\n      <li parentName=\"ol\">{`The other option would be to fetch the external values of the FILE and WWW types and then use that in the client side code to set the x-document-meta.`}</li>\n    </ol>\n    <p>{`We tend to prefer the first approach as its simpler of the client.`}</p>\n    <h2>{`Update the attachments`}</h2>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\nThere is no support to update an attachment. To revise an attachment, you need to delete the current version and create a new version.\n    </InlineNotification>\n    <h2>{`Delete the attachments`}</h2>\n    <p>{`You can delete attachments by using the HTTP POST with the URL of the attachment and providing the x-method-override header with a value of DELETE.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST oslc/os/mxapiasset/_MTAwMS9CRURGT1JE/doclinks/80 \nx-method-override: DELETE\n`}</code></pre>\n    <h2>{`Handling attachments as part of the resource json`}</h2>\n    <p>{`The following example adds two attached documents as part of asset creation:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"assetnum\": \"TEST299\",\n  \"siteid\": \"BEDFORD\",\n  \"doclinks\": [\n    {\n      \"urltype\": \"FILE\",\n      \"documentdata\": \"aGV5IGhvdyBhcmUgeW91\",\n      \"doctype\": \"Attachments\",\n      \"urlname\": \"greetingsabcd.txt\"\n    },\n    {\n      \"urltype\": \"FILE\",\n      \"documentdata\": \"aGV5IGhvdyBpcyB0aGF0\",\n      \"doctype\": \"Attachments\",\n      \"urlname\": \"howisthatfor.txt\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`In this example, the `}<inlineCode parentName=\"p\">{`documentdata`}</inlineCode>{` attribute has the base64 encoded document.`}</p>\n    <p>{`Below is an example of doing the same with WWW (url based) attachments:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`POST /oslc/os/mxapiasset\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"assetnum\": \"TEST399\",\n  \"siteid\": \"BEDFORD\",\n  \"doclinks\": [\n    {\n      \"urltype\": \"URL\",\n      \"doctype\": \"Attachments\",\n      \"title\": \"espn\",\n      \"newurlname\": \"www.espn.com\",\n      \"urlname\": \"www.espn.com\"\n    }\n  ]\n}\n`}</code></pre>\n    <p>{`We also support getting attachments inline as part of a json document. To do this just use the query parameter inlinedoc=1. An example shown below`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`GET /oslc/os/mxapiasset/{rest id}?inlinedoc=1\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"assetnum\": \"TEST299\",\n  \"siteid\": \"BEDFORD\",\n  \"doclinks\": [\n    {\n      \"urltype\": \"FILE\",\n      \"documentdata\": \"aGV5IGhvdyBhcmUgeW91\",\n      \"doctype\": \"Attachments\",\n      \"urlname\": \"greetingsabcd.txt\"\n    },\n    {\n      \"urltype\": \"FILE\",\n      \"documentdata\": \"aGV5IGhvdyBpcyB0aGF0\",\n      \"doctype\": \"Attachments\",\n      \"urlname\": \"howisthatfor.txt\"\n    }\n  ]\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","name","_frontmatter","InlineNotification","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"sourceRoot":""}