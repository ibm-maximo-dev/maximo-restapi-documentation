"use strict";(self.webpackChunkmas_playbook=self.webpackChunkmas_playbook||[]).push([[945],{3624:function(e,t,a){a.d(t,{Z:function(){return y}});var n=a(7294),r=a(8650),s=a.n(r),l=a(1597),o=a(811),i=a(87),d=a(5900),p=a.n(d),c=function(e){var t,a=e.title,r=e.theme,s=e.tabs,l=void 0===s?[]:s;return n.createElement("div",{className:p()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=l.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},m=function(e){var t=e.relativePagePath,a=e.repository,r=(0,l.useStaticQuery)("1364590287").site.siteMetadata.repository,s=a||r,o=s.baseUrl,i=s.subDirectory,d=o+"/edit/"+s.branch+i+"/src/pages"+t;return o?n.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},n.createElement("div",{className:"bx--col"},n.createElement("a",{className:"EditLink-module--link--IDrl1",href:d},"Edit this page on GitHub"))):null},u=a(4703),h=a(1721),k=function(e){function t(){return e.apply(this,arguments)||this}return(0,h.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,r=e.slug,o=r.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=s()(e,{lower:!0,strict:!0}),i=a===o,d=new RegExp(o+"/?(#.*)?$"),c=r.replace(d,a);return n.createElement("li",{key:e,className:p()((t={},t["PageTabs-module--selected-item--aBB0K"]=i,t),"PageTabs-module--list-item--024o6")},n.createElement(l.Link,{className:"PageTabs-module--link--Kz-7R",to:""+c},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--xLqxG"},i))))))},t}(n.Component),g=k,N=a(7296),b=a(5387),E=a(3732),f=function(e){var t=e.date,a=new Date(t);return t?n.createElement(E.X2,{className:"last-modified-date-module--row--XJoYQ"},n.createElement(E.sg,null,n.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},y=function(e){var t=e.pageContext,a=e.children,r=e.location,d=e.Title,p=t.frontmatter,h=void 0===p?{}:p,k=t.relativePagePath,E=t.titleType,y=h.tabs,v=h.title,w=h.theme,T=h.description,x=h.keywords,P=h.date,D=(0,b.Z)().interiorTheme,C=(0,l.useStaticQuery)("2456312558").site.pathPrefix,O=C?r.pathname.replace(C,""):r.pathname,A=y?O.split("/").filter(Boolean).slice(-1)[0]||s()(y[0],{lower:!0}):"",_=w||D;return n.createElement(i.Z,{tabs:y,homepage:!1,theme:_,pageTitle:v,pageDescription:T,pageKeywords:x,titleType:E},n.createElement(c,{title:d?n.createElement(d,null):v,label:"label",tabs:y,theme:_}),y&&n.createElement(g,{title:v,slug:O,tabs:y,currentTab:A}),n.createElement(N.Z,{padded:!0},a,n.createElement(m,{relativePagePath:k}),n.createElement(f,{date:P})),n.createElement(u.Z,{pageContext:t,location:r,slug:O,tabs:y,currentTab:A}),n.createElement(o.Z,null))}},9229:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return p}});var n=a(3366),r=(a(7294),a(4983)),s=a(3624),l=["components"],o={},i={_frontmatter:o},d=s.Z;function p(e){var t=e.components,a=(0,n.Z)(e,l);return(0,r.kt)(d,Object.assign({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"With Maximo RESTful JSON API, you can process multiple resources with multiple operations in a single transaction. The bulk process is supported only by using collection URLs. You can use the POST method and x-method override value BULK in the header."),(0,r.kt)("p",null,"The multiple resources and operations are provided in the message body with a JSON array. Each resource is like the object used to create mbo. It contains data and ",(0,r.kt)("em",{parentName:"p"},"_action")," attribute which indicates operation like add, update or delete."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Object Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CREATE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"assetnum": "test-5", "siteid": "BEDFORD", "description": "TS test 5","_action":"Add"}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UPDATE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"href": "...", "description": "New description","_action":"Update"}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DELETE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"href": "...", "_action": "Delete"}'))))),(0,r.kt)("p",null,"Unless there is a syntax type of error in your JSON data for bulk load, you will always get a response code of 200. However, you need to process the response to determine which resources were updated successfully."),(0,r.kt)("h2",null,"Multiple Resources Creation with BULK"),(0,r.kt)("p",null,"You can create multiple resources in a single transaction. As the regular creation, each of the resources go through the validation process. And the response for each of the resources are shown in response JSON."),(0,r.kt)("p",null,"NOTE: The processing performs a Commit for each resource."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST oslc/os/mxapiasset?lean=1\nX-method-override: BULK \n")),(0,r.kt)("p",null,"Post body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "assetnum": "test-1",\n    "siteid": "BEDFORD",\n    "description": "TS test 1",\n    "_action": "Add"\n  },\n  {\n    "assetnum": "test-2",\n    "siteid": "BEDFORD",\n    "description": "TS test 2",\n    "_action": "Add"\n  }\n]\n')),(0,r.kt)("p",null,"Response JSON:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "_responsemeta": {\n      "status": "201",\n      "Location": "oslc/os/mxapiasset/_VEVTVC0xL0JFREZPUkQ-"\n    }\n  },\n  {\n    "_responsemeta": {\n      "status": "201",\n      "Location": "oslc/os/mxapiasset/_VEVTVC0yL0JFREZPUkQ-"\n    }\n  }\n]\n')),(0,r.kt)("p",null,"If the first asset failed the validation process by having the invalid site, the http response code is still be 200. However, the error message similar to the messages in the following example is shown in the response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST oslc/os/mxapiasset?lean=1\nX-method-override: BULK \n")),(0,r.kt)("p",null,"Post body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "assetnum": "test-3",\n    "siteid": "BEDFORDXXYY",\n    "description": "TS test 1",\n    "_action": "Add"\n  },\n  {\n    "assetnum": "test-4",\n    "siteid": "BEDFORD",\n    "description": "TS test 2",\n    "_action": "Add"\n  }\n]\n')),(0,r.kt)("p",null,"Response JSON:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "_responsedata": {\n      "Error": {\n        "errorattrname": "siteid",\n        "extendedError": {\n          "moreInfo": {\n            "href": "oslc/error/messages/BMXAA4153E"\n          }\n        },\n        "errorobjpath": "asset",\n        "correlationid": null,\n        "reasonCode": "BMXAA4153E",\n        "message": "BMXAA4153E - BEDFORDXXYY is not a valid site. Enter a valid Site value as defined in the Organization Application.",\n        "statusCode": "400"\n      }\n    },\n    "_responsemeta": {\n      "status": "400"\n    }\n  },\n  {\n    "_responsemeta": {\n      "status": "201",\n      "Location": "oslc/os/mxapiasset/_VEVTVC00L0JFREZPUkQ-"\n    }\n  }\n]\n')),(0,r.kt)("p",null,"The first asset errored out because of invalid site and hence returns a  400 with an error message. The second asset returns a 201 with the URI to the newly created asset resource. The overall HTTP response code would still be 200. In the above case, even if both the asset json faced a business validation error, the overall response code would still be 200. The only cases you will see an error status is when the request is structurally invalid (say invalid json) or maybe for some request level error like the authentication failed."),(0,r.kt)("p",null,"We also support bulk change for actions, for example, change status as shown below:\nFor more info about Actions, see: ",(0,r.kt)("a",{parentName:"p",href:"/maximo-restapi-documentation/action/action"},"Action")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /oslc/os/mxapiwodetail?action=wsmethod:changeStatus\nX-method-override: BULK\n")),(0,r.kt)("p",null,"Post body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "status": "APPR",\n    "href": "..."\n  },\n  {\n    "status": "INPRG",\n    "href": "..."\n  }\n]\n')),(0,r.kt)("p",null,"The response format has not changed."),(0,r.kt)("h2",null,"Multiple Operations with BULK"),(0,r.kt)("p",null,"The examples in first section shows the creation of multiple assets using the BULK processing. You can also use BULK to perform a mix of create, update and delete of asset resources in a single transaction."),(0,r.kt)("p",null,"To support this, simply change the ",(0,r.kt)("em",{parentName:"p"},"_action")," value from ",(0,r.kt)("inlineCode",{parentName:"p"},"Add")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"Update")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"Delete")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Operation"),(0,r.kt)("th",{parentName:"tr",align:null},"Data Object Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CREATE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"_action":"Add"}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"UPDATE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"_action":"Update"}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DELETE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"_action": "Delete"}'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MERGE"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"?"))))),(0,r.kt)("p",null,"Below is an example JSON data that will"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Update an asset with a ‘New Description’"),(0,r.kt)("li",{parentName:"ul"},"Create a new asset (test-100)"),(0,r.kt)("li",{parentName:"ul"},"Delete an asset")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST oslc/os/mxapiasset?lean=1\nx-method-override: BULK\n")),(0,r.kt)("p",null,"Post body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "description": "New Description",\n    "_action": "Update"\n  },\n  {\n    "assetnum": "test-100",\n    "siteid": "BEDFORD",\n    "description": "New Asset 100",\n    "_action": "Add"\n  },\n  {\n    "href": "...",\n    "_Action": "Delete"\n  }\n]\n')),(0,r.kt)("p",null,"As with the Creation example earlier in this section, the response code will be a 200 but you must examine the response information in the response JSON body to determine if processing of each asset was successful or not."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-crud-bulk-mdx-02aa4222a28aa46391b6.js.map